{"version":3,"file":"forms-settings.mjs","sources":["../src/FormsSettings.vue","../src/settings.js"],"sourcesContent":["<!--\n  - SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<div>\n\t\t<NcSettingsSection :name=\"t('forms', 'Form creation')\">\n\t\t\t<NcCheckboxRadioSwitch\n\t\t\t\tref=\"switchRestrictCreation\"\n\t\t\t\t:checked.sync=\"appConfig.restrictCreation\"\n\t\t\t\tclass=\"forms-settings__creation__switch\"\n\t\t\t\ttype=\"switch\"\n\t\t\t\t@update:checked=\"onRestrictCreationChange\">\n\t\t\t\t{{ t('forms', 'Restrict form creation to selected groups') }}\n\t\t\t</NcCheckboxRadioSwitch>\n\t\t\t<NcSelect\n\t\t\t\tv-model=\"appConfig.creationAllowedGroups\"\n\t\t\t\t:disabled=\"!appConfig.restrictCreation\"\n\t\t\t\tmultiple\n\t\t\t\t:options=\"availableGroups\"\n\t\t\t\t:placeholder=\"t('forms', 'Select groups')\"\n\t\t\t\tclass=\"forms-settings__creation__multiselect\"\n\t\t\t\tlabel=\"displayName\"\n\t\t\t\t@input=\"onCreationAllowedGroupsChange\" />\n\t\t</NcSettingsSection>\n\t\t<NcSettingsSection :name=\"t('forms', 'Form sharing')\">\n\t\t\t<NcCheckboxRadioSwitch\n\t\t\t\tref=\"switchAllowPublicLink\"\n\t\t\t\t:checked.sync=\"appConfig.allowPublicLink\"\n\t\t\t\ttype=\"switch\"\n\t\t\t\t@update:checked=\"onAllowPublicLinkChange\">\n\t\t\t\t{{ t('forms', 'Allow sharing by link') }}\n\t\t\t</NcCheckboxRadioSwitch>\n\t\t\t<NcCheckboxRadioSwitch\n\t\t\t\tref=\"switchAllowPermitAll\"\n\t\t\t\t:checked.sync=\"appConfig.allowPermitAll\"\n\t\t\t\ttype=\"switch\"\n\t\t\t\t@update:checked=\"onAllowPermitAllChange\">\n\t\t\t\t{{ t('forms', 'Allow sharing to all logged in accounts') }}\n\t\t\t</NcCheckboxRadioSwitch>\n\t\t\t<NcCheckboxRadioSwitch\n\t\t\t\tref=\"switchAllowShowToAll\"\n\t\t\t\t:checked.sync=\"appConfig.allowShowToAll\"\n\t\t\t\ttype=\"switch\"\n\t\t\t\t@update:checked=\"onAllowShowToAllChange\">\n\t\t\t\t{{\n\t\t\t\t\tt(\n\t\t\t\t\t\t'forms',\n\t\t\t\t\t\t'Allow showing form to all logged in accounts on sidebar',\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</NcCheckboxRadioSwitch>\n\t\t</NcSettingsSection>\n\t</div>\n</template>\n\n<script>\nimport { showError } from '@nextcloud/dialogs'\nimport { loadState } from '@nextcloud/initial-state'\nimport { generateUrl } from '@nextcloud/router'\nimport axios from '@nextcloud/axios'\nimport NcCheckboxRadioSwitch from '@nextcloud/vue/components/NcCheckboxRadioSwitch'\nimport NcSelect from '@nextcloud/vue/components/NcSelect'\nimport NcSettingsSection from '@nextcloud/vue/components/NcSettingsSection'\n\nimport logger from './utils/Logger.js'\n\nexport default {\n\tname: 'FormsSettings',\n\n\tcomponents: {\n\t\tNcCheckboxRadioSwitch,\n\t\tNcSelect,\n\t\tNcSettingsSection,\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tappConfig: loadState(appName, 'appConfig'),\n\t\t\tavailableGroups: loadState(appName, 'availableGroups'),\n\t\t}\n\t},\n\n\tmethods: {\n\t\t/**\n\t\t * Similar procedures on**Change:\n\t\t *\n\t\t * - Show corresponding switch as loading\n\t\t * - Update value via api\n\t\t * - Only after everything is done (incl. possible reload on failure), unset loading.\n\t\t *\n\t\t * @param {boolean|Array} newVal The resp. new Value to store.\n\t\t */\n\t\tasync onRestrictCreationChange(newVal) {\n\t\t\tconst el = this.$refs.switchRestrictCreation\n\t\t\tel.loading = true\n\t\t\tawait this.saveAppConfig('restrictCreation', newVal)\n\t\t\tel.loading = false\n\t\t},\n\t\tasync onCreationAllowedGroupsChange(newVal) {\n\t\t\tconst el = this.$refs.switchRestrictCreation\n\t\t\tel.loading = true\n\t\t\tawait this.saveAppConfig(\n\t\t\t\t'creationAllowedGroups',\n\t\t\t\tnewVal.map((group) => group.groupId),\n\t\t\t)\n\t\t\tel.loading = false\n\t\t},\n\t\tasync onAllowPublicLinkChange(newVal) {\n\t\t\tconst el = this.$refs.switchAllowPublicLink\n\t\t\tel.loading = true\n\t\t\tawait this.saveAppConfig('allowPublicLink', newVal)\n\t\t\tel.loading = false\n\t\t},\n\t\tasync onAllowPermitAllChange(newVal) {\n\t\t\tconst el = this.$refs.switchAllowPermitAll\n\t\t\tel.loading = true\n\t\t\tawait this.saveAppConfig('allowPermitAll', newVal)\n\t\t\tel.loading = false\n\t\t},\n\t\tasync onAllowShowToAllChange(newVal) {\n\t\t\tconst el = this.$refs.switchAllowShowToAll\n\t\t\tel.loading = true\n\t\t\tawait this.saveAppConfig('allowShowToAll', newVal)\n\t\t\tel.loading = false\n\t\t},\n\n\t\t/**\n\t\t * Save a key-value pair to the appConfig.\n\t\t *\n\t\t * @param {string} configKey The key to store. Must be one of the used configKeys (See php-constants).\n\t\t * @param {boolean|Array} configValue The value to store.\n\t\t */\n\t\tasync saveAppConfig(configKey, configValue) {\n\t\t\ttry {\n\t\t\t\tawait axios.patch(generateUrl('apps/forms/config'), {\n\t\t\t\t\tconfigKey,\n\t\t\t\t\tconfigValue,\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Error while saving configuration', { error })\n\t\t\t\tshowError(t('forms', 'Error while saving configuration'))\n\t\t\t\tawait this.reloadAppConfig()\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Reload the current AppConfig. Used to restore in case of saving-failure.\n\t\t */\n\t\tasync reloadAppConfig() {\n\t\t\ttry {\n\t\t\t\tconst resp = await axios.get(generateUrl('apps/forms/config'))\n\t\t\t\tthis.appConfig = resp.data\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Error while reloading config', { error })\n\t\t\t\tshowError(t('forms', 'Error while reloading config'))\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.forms-settings {\n\t&__creation__switch {\n\t\tmargin-block-end: 4px;\n\t}\n\n\t&__creation__multiselect {\n\t\twidth: 100%;\n\t}\n}\n</style>\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { translate, translatePlural } from '@nextcloud/l10n'\nimport Vue from 'vue'\n\nimport FormsSettings from './FormsSettings.vue'\n\n// eslint-disable-next-line import/no-unresolved, n/no-missing-import\nimport 'vite/modulepreload-polyfill'\n\nVue.prototype.t = translate\nVue.prototype.n = translatePlural\n\nexport default new Vue({\n\tel: '#forms-settings',\n\t// eslint-disable-next-line vue/match-component-file-name\n\tname: 'FormsSettings',\n\trender: (h) => h(FormsSettings),\n})\n"],"names":["_sfc_main","NcCheckboxRadioSwitch","NcSelect","NcSettingsSection","loadState","appName","newVal","el","group","configKey","configValue","axios","generateUrl","error","logger","showError","resp","Vue","translate","translatePlural","h","FormsSettings"],"mappings":";mQAoEA,MAAAA,EAAA,CACA,KAAA,gBAEA,WAAA,CACA,sBAAAC,EACA,SAAAC,EACA,kBAAAC,CACA,EAEA,MAAA,CACA,MAAA,CACA,UAAAC,EAAAC,EAAA,WAAA,EACA,gBAAAD,EAAAC,EAAA,iBAAA,CACA,CACA,EAEA,QAAA,CAUA,MAAA,yBAAAC,EAAA,CACA,MAAAC,EAAA,KAAA,MAAA,uBACAA,EAAA,QAAA,GACA,MAAA,KAAA,cAAA,mBAAAD,CAAA,EACAC,EAAA,QAAA,EACA,EACA,MAAA,8BAAAD,EAAA,CACA,MAAAC,EAAA,KAAA,MAAA,uBACAA,EAAA,QAAA,GACA,MAAA,KAAA,cACA,wBACAD,EAAA,IAAAE,GAAAA,EAAA,OAAA,CACA,EACAD,EAAA,QAAA,EACA,EACA,MAAA,wBAAAD,EAAA,CACA,MAAAC,EAAA,KAAA,MAAA,sBACAA,EAAA,QAAA,GACA,MAAA,KAAA,cAAA,kBAAAD,CAAA,EACAC,EAAA,QAAA,EACA,EACA,MAAA,uBAAAD,EAAA,CACA,MAAAC,EAAA,KAAA,MAAA,qBACAA,EAAA,QAAA,GACA,MAAA,KAAA,cAAA,iBAAAD,CAAA,EACAC,EAAA,QAAA,EACA,EACA,MAAA,uBAAAD,EAAA,CACA,MAAAC,EAAA,KAAA,MAAA,qBACAA,EAAA,QAAA,GACA,MAAA,KAAA,cAAA,iBAAAD,CAAA,EACAC,EAAA,QAAA,EACA,EAQA,MAAA,cAAAE,EAAAC,EAAA,CACA,GAAA,CACA,MAAAC,EAAA,MAAAC,EAAA,mBAAA,EAAA,CACA,UAAAH,EACA,YAAAC,CACA,CAAA,CACA,OAAAG,EAAA,CACAC,EAAA,MAAA,mCAAA,CAAA,MAAAD,CAAA,CAAA,EACAE,EAAA,EAAA,QAAA,kCAAA,CAAA,EACA,MAAA,KAAA,gBAAA,CACA,CACA,EAKA,MAAA,iBAAA,CACA,GAAA,CACA,MAAAC,EAAA,MAAAL,EAAA,IAAAC,EAAA,mBAAA,CAAA,EACA,KAAA,UAAAI,EAAA,IACA,OAAAH,EAAA,CACAC,EAAA,MAAA,+BAAA,CAAA,MAAAD,CAAA,CAAA,EACAE,EAAA,EAAA,QAAA,8BAAA,CAAA,CACA,CACA,CACA,CACA,u4DCnJAE,EAAI,UAAU,EAAIC,EAClBD,EAAI,UAAU,EAAIE,EAEH,IAAIF,EAAI,CACtB,GAAI,kBAEJ,KAAM,gBACN,OAASG,GAAMA,EAAEC,CAAa,CAC/B,CAAC"}