{"version":3,"file":"talk-defaultVendors-node_modules_extendable-media-recorder_build_es2019_module_js.js?v=bd942caa0d57faff3b03","mappings":"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","sources":["webpack:///talk/node_modules/automation-events/build/es5/bundle.js","webpack:///talk/node_modules/broker-factory/build/es2019/guards/message-port.js","webpack:///talk/node_modules/broker-factory/build/es2019/helpers/port-map.js","webpack:///talk/node_modules/broker-factory/build/es2019/helpers/extend-broker-implementation.js","webpack:///talk/node_modules/broker-factory/build/es2019/module.js","webpack:///talk/node_modules/media-encoder-host-broker/build/es2019/module.js","webpack:///talk/node_modules/media-encoder-host/build/es2019/worker/worker.js","webpack:///talk/node_modules/media-encoder-host/build/es2019/module.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-factory.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js","webpack:///talk/node_modules/rxjs-interop/dist/esm/symbols.js","webpack:///talk/node_modules/rxjs-interop/dist/esm/patch.js","webpack:///talk/node_modules/rxjs-interop/dist/esm/to-observer.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/animation-frame.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/attribute.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/geolocation.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/intersections.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/map-subscribable-thing.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/media-devices.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/media-query-match.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/metrics.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/midi-inputs.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/midi-outputs.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/mutations.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/on.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/online.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/permission-state.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/prepend-subscribable-thing.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/reports.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/resizes.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/unhandled-rejection.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/video-frame.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/wake-lock.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/window.js","webpack:///talk/node_modules/subscribable-things/build/es2019/factories/wrap-subscribe-function.js","webpack:///talk/node_modules/subscribable-things/build/es2019/functions/emit-not-supported-error.js","webpack:///talk/node_modules/subscribable-things/build/es2019/module.js","webpack:///talk/node_modules/worker-factory/build/es2019/helpers/error-renderers.js","webpack:///talk/node_modules/worker-factory/build/es2019/helpers/create-message-handler.js","webpack:///talk/node_modules/worker-factory/build/es2019/helpers/extend-worker-implementation.js","webpack:///talk/node_modules/worker-factory/build/es2019/module.js","webpack:///talk/node_modules/recorder-audio-worklet/build/es2019/factories/add-recorder-audio-worklet-module.js","webpack:///talk/node_modules/recorder-audio-worklet/build/es2019/factories/listener.js","webpack:///talk/node_modules/recorder-audio-worklet/build/es2019/factories/post-message-factory.js","webpack:///talk/node_modules/recorder-audio-worklet/build/es2019/factories/recorder-audio-worklet-node-factory.js","webpack:///talk/node_modules/recorder-audio-worklet/build/es2019/functions/validate-state.js","webpack:///talk/node_modules/recorder-audio-worklet/build/es2019/module.js","webpack:///talk/node_modules/recorder-audio-worklet/build/es2019/worklet/worklet.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/globals.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/constants.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack:///talk/node_modules/standardized-audio-context/build/es2019/module.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/factories/window.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js","webpack:///talk/node_modules/extendable-media-recorder/build/es2019/module.js","webpack:///talk/node_modules/fast-unique-numbers/build/es5/bundle.js","webpack:///talk/node_modules/multi-buffer-data-view/build/es5/bundle.js","webpack:///talk/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///talk/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///talk/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///talk/node_modules/@babel/runtime/helpers/createClass.js","webpack:///talk/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///talk/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///talk/node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///talk/node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///talk/node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///talk/node_modules/@babel/runtime/helpers/typeof.js","webpack:///talk/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n        target = _ref.target,\n        timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var _getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, _getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, _getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n        value = _ref.value;\n      if (valueAtStartTime === value) {\n        return value;\n      }\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n        value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n        startTime = _ref.startTime,\n        values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck(this, AutomationEventList);\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n      return _createClass(AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n            var removedAutomationEvent = this._automationEvents[index];\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n                var startTime = lastAutomationEvent === undefined ? removedAutomationEvent.insertTime : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = lastAutomationEvent === undefined ? this._defaultValue : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                var duration = eventTime - lastAutomationEvent.startTime;\n                var ratio = (lastAutomationEvent.values.length - 1) / lastAutomationEvent.duration;\n                var length = Math.max(2, 1 + Math.ceil(duration * ratio));\n                var fraction = duration / (length - 1) * ratio;\n                var values = lastAutomationEvent.values.slice(0, length);\n                if (fraction < 1) {\n                  for (var i = 1; i < length; i += 1) {\n                    var factor = fraction * i % 1;\n                    values[i] = lastAutomationEvent.values[i - 1] * (1 - factor) + lastAutomationEvent.values[i] * factor;\n                  }\n                }\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(values, lastAutomationEvent.startTime, duration);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(_getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, _getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n              startTime = _getEndTimeAndValueOf2[0],\n              value = _getEndTimeAndValueOf2[1];\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n              _startTime = _getEndTimeAndValueOf4[0],\n              _value = _getEndTimeAndValueOf4[1];\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n          return this._defaultValue;\n        }\n      }]);\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n}));\n","export const isMessagePort = (sender) => {\n    return typeof sender.start === 'function';\n};\n//# sourceMappingURL=message-port.js.map","export const PORT_MAP = new WeakMap();\n//# sourceMappingURL=port-map.js.map","import { PORT_MAP } from './port-map';\nexport const extendBrokerImplementation = (partialBrokerImplementation) => ({\n    ...partialBrokerImplementation,\n    connect: ({ call }) => {\n        return async () => {\n            const { port1, port2 } = new MessageChannel();\n            const portId = await call('connect', { port: port1 }, [port1]);\n            PORT_MAP.set(port2, portId);\n            return port2;\n        };\n    },\n    disconnect: ({ call }) => {\n        return async (port) => {\n            const portId = PORT_MAP.get(port);\n            if (portId === undefined) {\n                throw new Error('The given port is not connected.');\n            }\n            await call('disconnect', { portId });\n        };\n    },\n    isSupported: ({ call }) => {\n        return () => call('isSupported');\n    }\n});\n//# sourceMappingURL=extend-broker-implementation.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst ONGOING_REQUESTS = new WeakMap();\nconst createOrGetOngoingRequests = (sender) => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return ONGOING_REQUESTS.get(sender);\n    }\n    const ongoingRequests = new Map();\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n    return ongoingRequests;\n};\nexport const createBroker = (brokerImplementation) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n    return (sender) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n        sender.addEventListener('message', (({ data: message }) => {\n            const { id } = message;\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = ongoingRequests.get(id);\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }));\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n        const call = (method, params = null, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                if (params === null) {\n                    sender.postMessage({ id, method }, transferables);\n                }\n                else {\n                    sender.postMessage({ id, method, params }, transferables);\n                }\n            });\n        };\n        const notify = (method, params, transferables = []) => {\n            sender.postMessage({ id: null, method, params }, transferables);\n        };\n        let functions = {};\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n        return { ...functions };\n    };\n};\n//# sourceMappingURL=module.js.map","import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderIds = new Set();\nconst encoderInstanceIds = new Set();\nconst messagePorts = new WeakMap();\nexport const wrap = createBroker({\n    deregister: ({ call }) => {\n        return async (port) => {\n            const encoderId = messagePorts.get(port);\n            if (encoderId === undefined) {\n                throw new Error('There is no encoder registered with the given port.');\n            }\n            const result = await call('deregister', { encoderId });\n            encoderIds.delete(encoderId);\n            messagePorts.delete(port);\n            return result;\n        };\n    },\n    encode: ({ call }) => {\n        return async (encoderInstanceId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderInstanceId, timeslice });\n            encoderInstanceIds.delete(encoderInstanceId);\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderInstanceId = addUniqueNumber(encoderInstanceIds);\n            const port = await call('instantiate', { encoderInstanceId, mimeType, sampleRate });\n            return { encoderInstanceId, port };\n        };\n    },\n    register: ({ call }) => {\n        return async (port) => {\n            if (messagePorts.has(port)) {\n                throw new Error('');\n            }\n            const encoderId = addUniqueNumber(encoderIds);\n            messagePorts.set(port, encoderId);\n            try {\n                return await call('register', { encoderId, port }, [port]);\n            }\n            catch (err) {\n                encoderIds.delete(encoderId);\n                messagePorts.delete(port);\n                throw err;\n            }\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the media-encoder-host-worker package.\nexport const worker = `(()=>{var e={455:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,s=2*o,a=function(e,t){return function(r){var a=t.get(r),c=void 0===a?r.size:a<s?a+1:0;if(!r.has(c))return e(r,c);if(r.size<o){for(;r.has(c);)c=Math.floor(Math.random()*s);return e(r,c)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(c);)c=Math.floor(Math.random()*n);return e(r,c)}},c=new WeakMap,i=r(c),d=a(i,c),l=t(d);e.addUniqueNumber=l,e.generateUniqueNumber=d}(t)}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}(()=>{\"use strict\";var e=r(455);const t=new WeakMap,n=new WeakMap,o=(r=>{const o=(s=r,{...s,connect:({call:e})=>async()=>{const{port1:r,port2:n}=new MessageChannel,o=await e(\"connect\",{port:r},[r]);return t.set(n,o),n},disconnect:({call:e})=>async r=>{const n=t.get(r);if(void 0===n)throw new Error(\"The given port is not connected.\");await e(\"disconnect\",{portId:n})},isSupported:({call:e})=>()=>e(\"isSupported\")});var s;return t=>{const r=(e=>{if(n.has(e))return n.get(e);const t=new Map;return n.set(e,t),t})(t);t.addEventListener(\"message\",({data:e})=>{const{id:t}=e;if(null!==t&&r.has(t)){const{reject:n,resolve:o}=r.get(t);r.delete(t),void 0===e.error?o(e.result):n(new Error(e.error.message))}}),(e=>\"function\"==typeof e.start)(t)&&t.start();const s=(n,o=null,s=[])=>new Promise((a,c)=>{const i=(0,e.generateUniqueNumber)(r);r.set(i,{reject:c,resolve:a}),null===o?t.postMessage({id:i,method:n},s):t.postMessage({id:i,method:n,params:o},s)}),a=(e,r,n=[])=>{t.postMessage({id:null,method:e,params:r},n)};let c={};for(const[e,t]of Object.entries(o))c={...c,[e]:t({call:s,notify:a})};return{...c}}})({characterize:({call:e})=>()=>e(\"characterize\"),encode:({call:e})=>(t,r)=>e(\"encode\",{recordingId:t,timeslice:r}),record:({call:e})=>async(t,r,n)=>{await e(\"record\",{recordingId:t,sampleRate:r,typedArrays:n},n.map(({buffer:e})=>e).filter(e=>e instanceof ArrayBuffer))}}),s=-32603,a=-32602,c=-32601,i=(e,t)=>Object.assign(new Error(e),{status:t}),d=e=>i('The handler of the method called \"'.concat(e,'\" returned an unexpected result.'),s),l=(e,t)=>async({data:{id:r,method:n,params:o}})=>{const a=t[n];try{if(void 0===a)throw(e=>i('The requested method called \"'.concat(e,'\" is not supported.'),c))(n);const t=void 0===o?a():a(o);if(void 0===t)throw(e=>i('The handler of the method called \"'.concat(e,'\" returned no required result.'),s))(n);const l=t instanceof Promise?await t:t;if(null===r){if(void 0!==l.result)throw d(n)}else{if(void 0===l.result)throw d(n);const{result:t,transferables:o=[]}=l;e.postMessage({id:r,result:t},o)}}catch(t){const{message:n,status:o=-32603}=t;e.postMessage({error:{code:o,message:n},id:r})}},u=new Map,h=(t,r,n)=>({...r,connect:({port:n})=>{n.start();const o=t(n,r),s=(0,e.generateUniqueNumber)(u);return u.set(s,()=>{o(),n.close(),u.delete(s)}),{result:s}},disconnect:({portId:e})=>{const t=u.get(e);if(void 0===t)throw(e=>i('The specified parameter called \"portId\" with the given value \"'.concat(e,'\" does not identify a port connected to this worker.'),a))(e);return t(),{result:null}},isSupported:async()=>{if(await new Promise(e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=({data:t})=>e(null!==t),n.postMessage(t,[t])})){const e=n();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),f=(e,t,r=()=>!0)=>{const n=h(f,t,r),o=l(e,n);return e.addEventListener(\"message\",o),()=>e.removeEventListener(\"message\",o)},w=e=>{e.onmessage=null,e.close()},p=new Map,m=new Map,g=((e,t)=>r=>{const n=t.get(r);if(void 0===n)throw new Error(\"There was no encoder stored with the given id.\");e.delete(n),t.delete(r)})(p,m),v=new Map,y=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error(\"There was no instance of an encoder stored with the given id.\");return r})(v),M=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(v,y),E=((e,t)=>r=>{const[n,o,s,a]=t(r);return s?new Promise(t=>{o.onmessage=({data:s})=>{0===s.length?(e(o),t(n.encode(r,null))):n.record(r,a,s)}}):n.encode(r,null)})(w,M),b=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error(\"There is no encoder registered which could handle the given mimeType.\")})(p),T=((e,t,r)=>(n,o,s)=>{if(t.has(n))throw new Error('There is already an encoder instance registered with an id called \"'.concat(n,'\".'));const a=r(o),{port1:c,port2:i}=new MessageChannel,d=[a,c,!0,s];return t.set(n,d),c.onmessage=({data:t})=>{0===t.length?(e(c),d[2]=!1):a.record(n,s,t.map(e=>\"number\"==typeof e?new Float32Array(e):e))},i})(w,v,b),I=((e,t,r)=>async(n,o)=>{const s=r(o),a=await s.characterize(),c=a.toString();if(e.has(c))throw new Error(\"There is already an encoder stored which handles exactly the same mime types.\");if(t.has(n))throw new Error('There is already an encoder registered with an id called \"'.concat(n,'\".'));return e.set(c,[a,s]),t.set(n,c),a})(p,m,o),A=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(y);f(self,{deregister:async({encoderId:e})=>(g(e),{result:null}),encode:async({encoderInstanceId:e,timeslice:t})=>{const r=null===t?await E(e):await A(e,t);return{result:r,transferables:r}},instantiate:({encoderInstanceId:e,mimeType:t,sampleRate:r})=>{const n=T(e,t,r);return{result:n,transferables:[n]}},register:async({encoderId:e,port:t})=>({result:await I(e,t)})})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst mediaEncoderHost = loadWorker(url);\nexport const connect = mediaEncoderHost.connect;\nexport const deregister = mediaEncoderHost.deregister;\nexport const disconnect = mediaEncoderHost.disconnect;\nexport const encode = mediaEncoderHost.encode;\nexport const instantiate = mediaEncoderHost.instantiate;\nexport const isSupported = mediaEncoderHost.isSupported;\nexport const register = mediaEncoderHost.register;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","export const createBlobEventFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        if (nativeBlobEventConstructor === null) {\n            throw new Error('A native BlobEvent could not be created.');\n        }\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n//# sourceMappingURL=blob-event-factory.js.map","export const createDecodeWebMChunk = (readElementContent, readElementType) => {\n    return (dataView, elementType, channelCount) => {\n        const contents = [];\n        let currentElementType = elementType;\n        let offset = 0;\n        while (offset < dataView.byteLength) {\n            if (currentElementType === null) {\n                const lengthAndType = readElementType(dataView, offset);\n                if (lengthAndType === null) {\n                    break;\n                }\n                const { length, type } = lengthAndType;\n                currentElementType = type;\n                offset += length;\n            }\n            else {\n                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);\n                if (contentAndLength === null) {\n                    break;\n                }\n                const { content, length } = contentAndLength;\n                currentElementType = null;\n                offset += length;\n                if (content !== null) {\n                    contents.push(content);\n                }\n            }\n        }\n        return { contents, currentElementType, offset };\n    };\n};\n//# sourceMappingURL=decode-web-m-chunk.js.map","export const createEventTargetConstructor = (createEventTarget, wrapEventListener) => {\n    return class EventTarget {\n        constructor(nativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createEventTargetFactory = (window) => {\n    return () => {\n        if (window === null) {\n            throw new Error('A native EventTarget could not be created.');\n        }\n        return window.document.createElement('p');\n    };\n};\n//# sourceMappingURL=event-target-factory.js.map","export const createInvalidModificationError = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-modification-error.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-state-error.js.map","export const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor) => {\n    return class MediaRecorder extends eventTargetConstructor {\n        constructor(stream, options = {}) {\n            const { mimeType } = options;\n            if (nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                super(internalMediaRecorder);\n                this._internalMediaRecorder = internalMediaRecorder;\n            }\n            else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm; codecs=pcm')) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                }\n                else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            }\n            else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n                throw createNotSupportedError();\n            }\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n        get mimeType() {\n            return this._internalMediaRecorder.mimeType;\n        }\n        get ondataavailable() {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('dataavailable', boundListener);\n                this._ondataavailable = [value, boundListener];\n            }\n            else {\n                this._ondataavailable = null;\n            }\n        }\n        get onerror() {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('error', boundListener);\n                this._onerror = [value, boundListener];\n            }\n            else {\n                this._onerror = null;\n            }\n        }\n        get onpause() {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('pause', boundListener);\n                this._onpause = [value, boundListener];\n            }\n            else {\n                this._onpause = null;\n            }\n        }\n        get onresume() {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('resume', boundListener);\n                this._onresume = [value, boundListener];\n            }\n            else {\n                this._onresume = null;\n            }\n        }\n        get onstart() {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('start', boundListener);\n                this._onstart = [value, boundListener];\n            }\n            else {\n                this._onstart = null;\n            }\n        }\n        get onstop() {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('stop', boundListener);\n                this._onstop = [value, boundListener];\n            }\n            else {\n                this._onstop = null;\n            }\n        }\n        get state() {\n            return this._internalMediaRecorder.state;\n        }\n        pause() {\n            return this._internalMediaRecorder.pause();\n        }\n        resume() {\n            return this._internalMediaRecorder.resume();\n        }\n        start(timeslice) {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n        stop() {\n            return this._internalMediaRecorder.stop();\n        }\n        static isTypeSupported(mimeType) {\n            return ((nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType)));\n        }\n    };\n};\n//# sourceMappingURL=media-recorder-constructor.js.map","export const createNativeBlobEventConstructor = (window) => {\n    if (window !== null && window.BlobEvent !== undefined) {\n        return window.BlobEvent;\n    }\n    return null;\n};\n//# sourceMappingURL=native-blob-event-constructor.js.map","export const createNativeMediaRecorderConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.MediaRecorder === undefined ? null : window.MediaRecorder;\n};\n//# sourceMappingURL=native-media-recorder-constructor.js.map","export const createNativeMediaRecorderFactory = (createNotSupportedError) => (nativeMediaRecorderConstructor, stream, mediaRecorderOptions) => {\n    const bufferedBlobEventListeners = new Map();\n    const dataAvailableListeners = new WeakMap();\n    const errorListeners = new WeakMap();\n    const flags = [];\n    const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);\n    const stopListeners = new WeakMap();\n    nativeMediaRecorder.addEventListener('stop', ({ isTrusted }) => {\n        if (isTrusted) {\n            setTimeout(() => flags.shift());\n        }\n    });\n    nativeMediaRecorder.addEventListener = ((addEventListener) => {\n        return (type, listener, options) => {\n            let patchedEventListener = listener;\n            if (typeof listener === 'function') {\n                if (type === 'dataavailable') {\n                    const bufferedBlobEvents = [];\n                    // Bug #20: Firefox dispatches multiple dataavailable events while being inactive.\n                    patchedEventListener = (event) => {\n                        const [[isSliced, isActive] = [false, false]] = flags;\n                        if (isSliced && !isActive) {\n                            bufferedBlobEvents.push(event);\n                        }\n                        else {\n                            listener.call(nativeMediaRecorder, event);\n                        }\n                    };\n                    bufferedBlobEventListeners.set(listener, bufferedBlobEvents);\n                    dataAvailableListeners.set(listener, patchedEventListener);\n                }\n                else if (type === 'error') {\n                    // Bug #12 & #13: Firefox fires a regular event with an error property.\n                    patchedEventListener = (event) => {\n                        if (event instanceof ErrorEvent) {\n                            listener.call(nativeMediaRecorder, event);\n                        }\n                        else {\n                            listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: event.error }));\n                        }\n                    };\n                    errorListeners.set(listener, patchedEventListener);\n                }\n                else if (type === 'stop') {\n                    // Bug #20: Firefox dispatches multiple dataavailable events while being inactive.\n                    patchedEventListener = (event) => {\n                        for (const [dataAvailableListener, bufferedBlobEvents] of bufferedBlobEventListeners.entries()) {\n                            if (bufferedBlobEvents.length > 0) {\n                                const [blobEvent] = bufferedBlobEvents;\n                                if (bufferedBlobEvents.length > 1) {\n                                    Object.defineProperty(blobEvent, 'data', {\n                                        value: new Blob(bufferedBlobEvents.map(({ data }) => data), { type: blobEvent.data.type })\n                                    });\n                                }\n                                bufferedBlobEvents.length = 0;\n                                dataAvailableListener.call(nativeMediaRecorder, blobEvent);\n                            }\n                        }\n                        listener.call(nativeMediaRecorder, event);\n                    };\n                    stopListeners.set(listener, patchedEventListener);\n                }\n            }\n            return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n        };\n    })(nativeMediaRecorder.addEventListener);\n    nativeMediaRecorder.removeEventListener = ((removeEventListener) => {\n        return (type, listener, options) => {\n            let patchedEventListener = listener;\n            if (typeof listener === 'function') {\n                if (type === 'dataavailable') {\n                    bufferedBlobEventListeners.delete(listener);\n                    const dataAvailableListener = dataAvailableListeners.get(listener);\n                    if (dataAvailableListener !== undefined) {\n                        patchedEventListener = dataAvailableListener;\n                    }\n                }\n                else if (type === 'error') {\n                    const errorListener = errorListeners.get(listener);\n                    if (errorListener !== undefined) {\n                        patchedEventListener = errorListener;\n                    }\n                }\n                else if (type === 'stop') {\n                    const stopListener = stopListeners.get(listener);\n                    if (stopListener !== undefined) {\n                        patchedEventListener = stopListener;\n                    }\n                }\n            }\n            return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n        };\n    })(nativeMediaRecorder.removeEventListener);\n    nativeMediaRecorder.start = ((start) => {\n        return (timeslice) => {\n            /*\n             * Bug #6: Safari will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n             * codec.\n             */\n            if (mediaRecorderOptions.mimeType !== undefined &&\n                mediaRecorderOptions.mimeType.startsWith('audio/') &&\n                stream.getVideoTracks().length > 0) {\n                throw createNotSupportedError();\n            }\n            if (nativeMediaRecorder.state === 'inactive') {\n                flags.push([timeslice !== undefined, true]);\n            }\n            return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);\n        };\n    })(nativeMediaRecorder.start);\n    nativeMediaRecorder.stop = ((stop) => {\n        return () => {\n            if (nativeMediaRecorder.state !== 'inactive') {\n                flags[0][1] = false;\n            }\n            stop.call(nativeMediaRecorder);\n        };\n    })(nativeMediaRecorder.stop);\n    return nativeMediaRecorder;\n};\n//# sourceMappingURL=native-media-recorder-factory.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=not-supported-error.js.map","export const createReadElementContent = (readVariableSizeInteger) => {\n    return (dataView, offset, type, channelCount = 2) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (type === 'master') {\n            return { content: null, length };\n        }\n        if (offset + length + value > dataView.byteLength) {\n            return null;\n        }\n        if (type === 'binary') {\n            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;\n            const content = Array.from({ length: channelCount }, () => new Float32Array(numberOfSamples));\n            for (let i = 0; i < numberOfSamples; i += 1) {\n                const elementOffset = i * channelCount + 1;\n                for (let j = 0; j < channelCount; j += 1) {\n                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);\n                }\n            }\n            return { content, length: length + value };\n        }\n        return { content: null, length: length + value };\n    };\n};\n//# sourceMappingURL=read-element-content.js.map","export const createReadElementType = (readVariableSizeInteger) => {\n    return (dataView, offset) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (value === 35) {\n            return { length, type: 'binary' };\n        }\n        if (value === 46 ||\n            value === 97 ||\n            value === 88713574 ||\n            value === 106212971 ||\n            value === 139690087 ||\n            value === 172351395 ||\n            value === 256095861) {\n            return { length, type: 'master' };\n        }\n        return { length, type: 'unknown' };\n    };\n};\n//# sourceMappingURL=read-element-type.js.map","export const createReadVariableSizeInteger = (readVariableSizeIntegerLength) => {\n    return (dataView, offset) => {\n        const length = readVariableSizeIntegerLength(dataView, offset);\n        if (length === null) {\n            return length;\n        }\n        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);\n        if (firstDataByteOffset + length > dataView.byteLength) {\n            return null;\n        }\n        const firstDataByte = dataView.getUint8(firstDataByteOffset);\n        let value = firstDataByte & ((1 << (8 - (length % 8))) - 1); // tslint:disable-line:no-bitwise\n        for (let i = 1; i < length; i += 1) {\n            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise\n        }\n        return { length, value };\n    };\n};\n//# sourceMappingURL=read-variable-size-integer.js.map","export const observable = Symbol.observable || \"@@observable\";\r\n//# sourceMappingURL=symbols.js.map","import { observable } from \"./symbols\";\r\nexport function patch(arg) {\r\n    if (!Symbol.observable) {\r\n        if (typeof arg === \"function\" &&\r\n            arg.prototype &&\r\n            arg.prototype[Symbol.observable]) {\r\n            arg.prototype[observable] = arg.prototype[Symbol.observable];\r\n            delete arg.prototype[Symbol.observable];\r\n        }\r\n        else {\r\n            arg[observable] = arg[Symbol.observable];\r\n            delete arg[Symbol.observable];\r\n        }\r\n    }\r\n    return arg;\r\n}\r\n//# sourceMappingURL=patch.js.map","const noop = () => { };\r\nconst rethrow = (error) => {\r\n    throw error;\r\n};\r\nexport function toObserver(observer) {\r\n    if (observer) {\r\n        if (observer.next && observer.error && observer.complete) {\r\n            return observer;\r\n        }\r\n        return {\r\n            complete: (observer.complete ?? noop).bind(observer),\r\n            error: (observer.error ?? rethrow).bind(observer),\r\n            next: (observer.next ?? noop).bind(observer),\r\n        };\r\n    }\r\n    return {\r\n        complete: noop,\r\n        error: rethrow,\r\n        next: noop,\r\n    };\r\n}\r\n//# sourceMappingURL=to-observer.js.map","export const createAnimationFrame = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null || window.cancelAnimationFrame === undefined || window.requestAnimationFrame === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let animationFrameHandle = window.requestAnimationFrame(function animationFrameCallback(timestamp) {\n            animationFrameHandle = window.requestAnimationFrame(animationFrameCallback);\n            observer.next(timestamp);\n        });\n        return () => window.cancelAnimationFrame(animationFrameHandle);\n    });\n};\n//# sourceMappingURL=animation-frame.js.map","export const createAttribute = (mapSubscribableThing, mutations, prependSubscribableThing) => {\n    return (htmlElement, name) => {\n        const getAttribute = () => htmlElement.getAttribute(name);\n        return prependSubscribableThing(mapSubscribableThing(mutations(htmlElement, {\n            attributeFilter: [name],\n            childList: false,\n            subtree: false\n        }), () => getAttribute()), getAttribute());\n    };\n};\n//# sourceMappingURL=attribute.js.map","export const createGeolocation = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.geolocation === undefined ||\n            window.navigator.geolocation.clearWatch === undefined ||\n            window.navigator.geolocation.watchPosition === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const watchId = window.navigator.geolocation.watchPosition((position) => observer.next(position), (err) => observer.error(err), options);\n        return () => window.navigator.geolocation.clearWatch(watchId);\n    });\n};\n//# sourceMappingURL=geolocation.js.map","export const createIntersections = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.IntersectionObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const intersectionObserverObserver = new window.IntersectionObserver((entries) => observer.next(entries), options);\n        try {\n            intersectionObserverObserver.observe(htmlElement);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => intersectionObserverObserver.disconnect();\n    });\n};\n//# sourceMappingURL=intersections.js.map","export const createMapSubscribableThing = (wrapSubscribeFunction) => (subscribableThing, map) => wrapSubscribeFunction((observer) => subscribableThing({ ...observer, next: (value) => observer.next(map(value)) }));\n//# sourceMappingURL=map-subscribable-thing.js.map","export const createMediaDevices = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.mediaDevices === undefined ||\n            window.navigator.mediaDevices.enumerateDevices === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let isActive = true;\n        const enumerateDevices = () => {\n            window.navigator.mediaDevices.enumerateDevices().then((mediaDevices) => {\n                if (isActive) {\n                    observer.next(mediaDevices);\n                }\n            }, (err) => {\n                if (isActive) {\n                    unsubscribe();\n                    observer.error(err);\n                }\n            });\n        };\n        const unsubscribe = () => {\n            isActive = false;\n            window.navigator.mediaDevices.removeEventListener('devicechange', enumerateDevices);\n        };\n        enumerateDevices();\n        window.navigator.mediaDevices.addEventListener('devicechange', enumerateDevices);\n        return unsubscribe;\n    });\n};\n//# sourceMappingURL=media-devices.js.map","export const createMediaQueryMatch = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (mediaQueryString) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.matchMedia === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const mediaQueryList = window.matchMedia(mediaQueryString);\n        observer.next(mediaQueryList.matches);\n        mediaQueryList.onchange = () => observer.next(mediaQueryList.matches);\n        return () => {\n            mediaQueryList.onchange = null;\n        };\n    });\n};\n//# sourceMappingURL=media-query-match.js.map","export const createMetrics = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.PerformanceObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const performanceObserver = new window.PerformanceObserver((entryList) => observer.next(entryList.getEntries()));\n        try {\n            performanceObserver.observe(options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => performanceObserver.disconnect();\n    });\n};\n//# sourceMappingURL=metrics.js.map","export const createMidiInputs = (wrapSubscribeFunction) => {\n    return (midiAccess) => wrapSubscribeFunction((observer) => {\n        let midiInputs = Array.from(midiAccess.inputs.values());\n        const emitMidiInputs = () => {\n            const midiAccessInputs = midiAccess.inputs;\n            if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(({ id }) => !midiAccessInputs.has(id))) {\n                midiInputs = Array.from(midiAccessInputs.values());\n                observer.next(midiInputs);\n            }\n        };\n        observer.next(midiInputs);\n        midiAccess.addEventListener('statechange', emitMidiInputs);\n        return () => midiAccess.removeEventListener('statechange', emitMidiInputs);\n    });\n};\n//# sourceMappingURL=midi-inputs.js.map","export const createMidiOutputs = (wrapSubscribeFunction) => {\n    return (midiAccess) => wrapSubscribeFunction((observer) => {\n        let midiOutputs = Array.from(midiAccess.outputs.values());\n        const emitMidiOutputs = () => {\n            const midiAccessOutputs = midiAccess.outputs;\n            if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(({ id }) => !midiAccessOutputs.has(id))) {\n                midiOutputs = Array.from(midiAccessOutputs.values());\n                observer.next(midiOutputs);\n            }\n        };\n        observer.next(midiOutputs);\n        midiAccess.addEventListener('statechange', emitMidiOutputs);\n        return () => midiAccess.removeEventListener('statechange', emitMidiOutputs);\n    });\n};\n//# sourceMappingURL=midi-outputs.js.map","export const createMutations = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.MutationObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const mutationObserver = new window.MutationObserver((records) => observer.next(records));\n        try {\n            mutationObserver.observe(htmlElement, options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => mutationObserver.disconnect();\n    });\n};\n//# sourceMappingURL=mutations.js.map","export const createOn = (wrapSubscribeFunction) => {\n    return (target, type, options) => wrapSubscribeFunction((observer) => {\n        const listener = (event) => observer.next(event);\n        target.addEventListener(type, listener, options);\n        return () => target.removeEventListener(type, listener, options);\n    });\n};\n//# sourceMappingURL=on.js.map","export const createOnline = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null || window.navigator === undefined || window.navigator.onLine === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const emitFalse = () => observer.next(false);\n        const emitTrue = () => observer.next(true);\n        window.addEventListener('offline', emitFalse);\n        window.addEventListener('online', emitTrue);\n        observer.next(window.navigator.onLine);\n        return () => {\n            window.removeEventListener('offline', emitFalse);\n            window.removeEventListener('online', emitTrue);\n        };\n    });\n};\n//# sourceMappingURL=online.js.map","export const createPermissionState = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (permissionDescriptor) => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.permissions === undefined ||\n            window.navigator.permissions.query === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let isActive = true;\n        let unsubscribe = () => {\n            isActive = false;\n        };\n        window.navigator.permissions.query(permissionDescriptor).then((permissionStatus) => {\n            if (isActive) {\n                observer.next(permissionStatus.state);\n            }\n            if (isActive) {\n                permissionStatus.onchange = () => observer.next(permissionStatus.state);\n                unsubscribe = () => {\n                    permissionStatus.onchange = null;\n                };\n            }\n        }, (err) => {\n            if (isActive) {\n                observer.error(err);\n            }\n        });\n        return () => unsubscribe();\n    });\n};\n//# sourceMappingURL=permission-state.js.map","export const createPrependSubscribableThing = (wrapSubscribeFunction) => (subscribableThing, prependedValue) => wrapSubscribeFunction((observer) => {\n    observer.next(prependedValue);\n    return subscribableThing(observer);\n});\n//# sourceMappingURL=prepend-subscribable-thing.js.map","export const createReports = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.ReportingObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const reportingObserver = new window.ReportingObserver((reportList) => observer.next(reportList), options);\n        reportingObserver.observe();\n        return () => reportingObserver.disconnect();\n    });\n};\n//# sourceMappingURL=reports.js.map","export const createResizes = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.ResizeObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const resizeObserver = new window.ResizeObserver((entries) => observer.next(entries));\n        try {\n            resizeObserver.observe(htmlElement, options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => resizeObserver.disconnect();\n    });\n};\n//# sourceMappingURL=resizes.js.map","export const createUnhandledRejection = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (coolingOffPeriod) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.clearInterval === undefined || window.setInterval === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const possiblyUnhandledRejections = new Map();\n        let intervalId = null;\n        const deletePossiblyUnhandledRejection = ({ promise }) => possiblyUnhandledRejections.delete(promise);\n        const emitUnhandledRejection = () => {\n            const latestTimestampToEmit = Date.now() - coolingOffPeriod;\n            possiblyUnhandledRejections.forEach(({ reason, timestamp }, promise) => {\n                if (timestamp > latestTimestampToEmit) {\n                    return;\n                }\n                possiblyUnhandledRejections.delete(promise);\n                observer.next(reason);\n            });\n            if (intervalId !== null && possiblyUnhandledRejections.size === 0) {\n                window.clearInterval(intervalId);\n                intervalId = null;\n            }\n        };\n        const registerPossiblyUnhandledRejection = (event) => {\n            event.preventDefault();\n            possiblyUnhandledRejections.set(event.promise, {\n                reason: event.reason,\n                timestamp: Date.now()\n            });\n            if (intervalId === null) {\n                intervalId = window.setInterval(emitUnhandledRejection, coolingOffPeriod / 2);\n            }\n        };\n        window.addEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n        window.addEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n        return () => {\n            if (intervalId !== null) {\n                window.clearInterval(intervalId);\n            }\n            window.removeEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n            window.removeEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n        };\n    });\n};\n//# sourceMappingURL=unhandled-rejection.js.map","export const createVideoFrame = (emitNotSupportedError, wrapSubscribeFunction) => {\n    return (videoElement) => wrapSubscribeFunction((observer) => {\n        if (videoElement.cancelVideoFrameCallback === undefined || videoElement.requestVideoFrameCallback === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let videoFrameHandle = videoElement.requestVideoFrameCallback(function videoFrameCallback(now, metadata) {\n            videoFrameHandle = videoElement.requestVideoFrameCallback(videoFrameCallback);\n            observer.next({ ...metadata, now });\n        });\n        return () => videoElement.cancelVideoFrameCallback(videoFrameHandle);\n    });\n};\n//# sourceMappingURL=video-frame.js.map","export const createWakeLock = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (type) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.navigator === undefined || window.navigator.wakeLock === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const releaseWakeLock = (wakeLockSentinel) => wakeLockSentinel.release().catch(() => {\n            // Ignore errors.\n        });\n        const removeReleaseEventListener = (wakeLockSentinel) => {\n            wakeLockSentinel.onrelease = null;\n        };\n        let isActive = true;\n        const unsubscribeWhileRequesting = () => {\n            isActive = false;\n        };\n        let unsubscribe = unsubscribeWhileRequesting;\n        const requestWakeLock = () => window.navigator.wakeLock.request(type).then((wakeLockSentinel) => {\n            if (isActive) {\n                observer.next(true);\n            }\n            if (isActive) {\n                wakeLockSentinel.onrelease = () => {\n                    observer.next(false);\n                    unsubscribe = unsubscribeWhileRequesting;\n                    removeReleaseEventListener(wakeLockSentinel);\n                    requestWakeLock();\n                };\n                unsubscribe = () => {\n                    removeReleaseEventListener(wakeLockSentinel);\n                    releaseWakeLock(wakeLockSentinel);\n                };\n            }\n            else {\n                releaseWakeLock(wakeLockSentinel);\n            }\n        }, (err) => {\n            if (isActive) {\n                observer.error(err);\n            }\n        });\n        requestWakeLock();\n        return () => unsubscribe();\n    });\n};\n//# sourceMappingURL=wake-lock.js.map","// @todo TypeScript does not include type definitions for the Reporting API yet.\nexport const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapSubscribeFunction = (patch, toObserver) => {\n    const emptyFunction = () => { }; // tslint:disable-line:no-empty\n    const isNextFunction = (args) => typeof args[0] === 'function';\n    return (innerSubscribe) => {\n        const subscribe = ((...args) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n            return emptyFunction;\n        });\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args) => ({ unsubscribe: subscribe(...args) })\n        });\n        return patch(subscribe);\n    };\n};\n//# sourceMappingURL=wrap-subscribe-function.js.map","export const emitNotSupportedError = (observer) => {\n    observer.error(new Error('The required browser API seems to be not supported.'));\n    return () => { }; // tslint:disable-line:no-empty\n};\n//# sourceMappingURL=emit-not-supported-error.js.map","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\nexport const on = createOn(wrapSubscribeFunction);\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n//# sourceMappingURL=module.js.map","const JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\nconst createErrorWithMessageAndStatus = (message, status) => Object.assign(new Error(message), { status });\nexport const renderMethodNotFoundError = (method) => createErrorWithMessageAndStatus(`The requested method called \"${method}\" is not supported.`, JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND);\nexport const renderMissingResponseError = (method) => createErrorWithMessageAndStatus(`The handler of the method called \"${method}\" returned no required result.`, JSON_RPC_ERROR_CODES.INTERNAL_ERROR);\nexport const renderUnexpectedResultError = (method) => createErrorWithMessageAndStatus(`The handler of the method called \"${method}\" returned an unexpected result.`, JSON_RPC_ERROR_CODES.INTERNAL_ERROR);\nexport const renderUnknownPortIdError = (portId) => createErrorWithMessageAndStatus(`The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.`, JSON_RPC_ERROR_CODES.INVALID_PARAMS);\n//# sourceMappingURL=error-renderers.js.map","import { renderMethodNotFoundError, renderMissingResponseError, renderUnexpectedResultError } from './error-renderers';\nexport const createMessageHandler = (receiver, workerImplementation) => {\n    return async ({ data: { id, method, params } }) => {\n        const messageHandler = workerImplementation[method];\n        try {\n            if (messageHandler === undefined) {\n                throw renderMethodNotFoundError(method);\n            }\n            const response = params === undefined\n                ? messageHandler()\n                : messageHandler(params);\n            if (response === undefined) {\n                throw renderMissingResponseError(method);\n            }\n            const synchronousResponse = response instanceof Promise ? await response : response;\n            if (id === null) {\n                if (synchronousResponse.result !== undefined) {\n                    throw renderUnexpectedResultError(method);\n                }\n            }\n            else {\n                if (synchronousResponse.result === undefined) {\n                    throw renderUnexpectedResultError(method);\n                }\n                const { result, transferables = [] } = synchronousResponse;\n                receiver.postMessage({ id, result }, transferables);\n            }\n        }\n        catch (err) {\n            const { message, status = -32603 } = err;\n            receiver.postMessage({ error: { code: status, message }, id });\n        }\n    };\n};\n//# sourceMappingURL=create-message-handler.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { renderUnknownPortIdError } from './error-renderers';\nimport { isSupportingTransferables } from './is-supporting-transferables';\nconst DESTROY_WORKER_FUNCTIONS = new Map();\nexport const extendWorkerImplementation = (createWorker, partialWorkerImplementation, isSupportedFunction) => ({\n    ...partialWorkerImplementation,\n    connect: ({ port }) => {\n        port.start();\n        const destroyWorker = createWorker(port, partialWorkerImplementation);\n        const portId = generateUniqueNumber(DESTROY_WORKER_FUNCTIONS);\n        DESTROY_WORKER_FUNCTIONS.set(portId, () => {\n            destroyWorker();\n            port.close();\n            DESTROY_WORKER_FUNCTIONS.delete(portId);\n        });\n        return { result: portId };\n    },\n    disconnect: ({ portId }) => {\n        const destroyWorker = DESTROY_WORKER_FUNCTIONS.get(portId);\n        if (destroyWorker === undefined) {\n            throw renderUnknownPortIdError(portId);\n        }\n        destroyWorker();\n        return { result: null };\n    },\n    isSupported: async () => {\n        const isSelfSupported = await isSupportingTransferables();\n        if (isSelfSupported) {\n            const result = isSupportedFunction();\n            const synchronousResult = result instanceof Promise ? await result : result;\n            return { result: synchronousResult };\n        }\n        return { result: false };\n    }\n});\n//# sourceMappingURL=extend-worker-implementation.js.map","import { createMessageHandler } from './helpers/create-message-handler';\nimport { extendWorkerImplementation } from './helpers/extend-worker-implementation';\nimport { isSupportingTransferables } from './helpers/is-supporting-transferables';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const createWorker = (receiver, workerImplementation, isSupportedFunction = () => true) => {\n    const fullWorkerImplementation = extendWorkerImplementation(createWorker, workerImplementation, isSupportedFunction);\n    const messageHandler = createMessageHandler(receiver, fullWorkerImplementation);\n    receiver.addEventListener('message', messageHandler);\n    return () => receiver.removeEventListener('message', messageHandler);\n};\nexport { isSupportingTransferables as isSupported };\n//# sourceMappingURL=module.js.map","export const createAddRecorderAudioWorkletModule = (blobConstructor, urlConstructor, worklet) => {\n    return async (addAudioWorkletModule) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n        try {\n            await addAudioWorkletModule(url);\n        }\n        finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n//# sourceMappingURL=add-recorder-audio-worklet-module.js.map","export const createListener = (ongoingRequests) => {\n    return ({ data: message }) => {\n        const { id } = message;\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=listener.js.map","export const createPostMessageFactory = (generateUniqueNumber) => {\n    return (ongoingRequests, port) => {\n        return (message, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n//# sourceMappingURL=post-message-factory.js.map","export const createRecorderAudioWorkletNodeFactory = (createListener, createPostMessage, on, validateState) => {\n    return (audioWorkletNodeConstructor, context, options = {}) => {\n        const audioWorkletNode = new audioWorkletNodeConstructor(context, 'recorder-audio-worklet-processor', {\n            ...options,\n            channelCountMode: 'explicit',\n            numberOfInputs: 1,\n            numberOfOutputs: 0\n        });\n        const ongoingRequests = new Map();\n        const postMessage = createPostMessage(ongoingRequests, audioWorkletNode.port);\n        const unsubscribe = on(audioWorkletNode.port, 'message')(createListener(ongoingRequests));\n        audioWorkletNode.port.start();\n        let state = 'inactive';\n        Object.defineProperties(audioWorkletNode, {\n            pause: {\n                get() {\n                    return async () => {\n                        validateState(['recording'], state);\n                        state = 'paused';\n                        return postMessage({\n                            method: 'pause'\n                        });\n                    };\n                }\n            },\n            port: {\n                get() {\n                    throw new Error(\"The port of a RecorderAudioWorkletNode can't be accessed.\");\n                }\n            },\n            record: {\n                get() {\n                    return async (encoderPort) => {\n                        validateState(['inactive'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'record',\n                            params: { encoderPort }\n                        }, [encoderPort]);\n                    };\n                }\n            },\n            resume: {\n                get() {\n                    return async () => {\n                        validateState(['paused'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'resume'\n                        });\n                    };\n                }\n            },\n            stop: {\n                get() {\n                    return async () => {\n                        validateState(['paused', 'recording'], state);\n                        state = 'stopped';\n                        try {\n                            await postMessage({ method: 'stop' });\n                        }\n                        finally {\n                            unsubscribe();\n                        }\n                    };\n                }\n            }\n        });\n        return audioWorkletNode;\n    };\n};\n//# sourceMappingURL=recorder-audio-worklet-node-factory.js.map","export const validateState = (expectedStates, currentState) => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(`Expected the state to be ${expectedStates\n            .map((expectedState) => `\"${expectedState}\"`)\n            .join(' or ')} but it was \"${currentState}\".`);\n    }\n};\n//# sourceMappingURL=validate-state.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { on } from 'subscribable-things';\nimport { isSupported } from 'worker-factory';\nimport { createAddRecorderAudioWorkletModule } from './factories/add-recorder-audio-worklet-module';\nimport { createListener } from './factories/listener';\nimport { createPostMessageFactory } from './factories/post-message-factory';\nimport { createRecorderAudioWorkletNodeFactory } from './factories/recorder-audio-worklet-node-factory';\nimport { validateState } from './functions/validate-state';\nimport { worklet } from './worklet/worklet';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const addRecorderAudioWorkletModule = createAddRecorderAudioWorkletModule(Blob, URL, worklet);\nexport const createRecorderAudioWorkletNode = createRecorderAudioWorkletNodeFactory(createListener, createPostMessageFactory(generateUniqueNumber), on, validateState);\nexport { isSupported };\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the recorder-audio-worklet-processor package.\nexport const worklet = `(()=>{\"use strict\";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._numberOfChannels=0,this._state=\"inactive\",this.port.onmessage=({data:e})=>{\"pause\"===e.method?\"active\"===this._state||\"recording\"===this._state?(this._state=\"paused\",this._sendAcknowledgement(e.id)):this._sendUnexpectedStateError(e.id):\"record\"===e.method?\"inactive\"===this._state?(this._encoderPort=e.params.encoderPort,this._state=\"active\",this._sendAcknowledgement(e.id)):this._sendUnexpectedStateError(e.id):\"resume\"===e.method?\"paused\"===this._state?(this._state=\"active\",this._sendAcknowledgement(e.id)):this._sendUnexpectedStateError(e.id):\"stop\"===e.method?\"active\"!==this._state&&\"paused\"!==this._state&&\"recording\"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(e.id):(this._stop(this._encoderPort),this._sendAcknowledgement(e.id)):\"number\"==typeof e.id&&this.port.postMessage({error:{code:-32601,message:\"The requested method is not supported.\"},id:e.id})}}process([e]){if(\"inactive\"===this._state||\"paused\"===this._state)return!0;if(\"active\"===this._state){if(void 0===e)throw new Error(\"No channelData was received for the first input.\");if(0===e.length)return!0;this._state=\"recording\"}if(\"recording\"===this._state&&null!==this._encoderPort){if(void 0===e)throw new Error(\"No channelData was received for the first input.\");return 0===e.length?this._encoderPort.postMessage(Array.from({length:this._numberOfChannels},()=>128)):(this._encoderPort.postMessage(e,e.map(({buffer:e})=>e)),this._numberOfChannels=e.length),!0}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:\"The internal state does not allow to process the given message.\"},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state=\"stopped\"}}e.parameterDescriptors=[],registerProcessor(\"recorder-audio-worklet-processor\",e)})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worklet.js.map","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    let index = 0;\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise = nativeContext.audioWorklet === undefined\n            ? fetchSource(moduleURL)\n                .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n                .then(() => {\n                const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n                }, undefined, (name, processorCtor) => {\n                    if (name.trim() === '') {\n                        throw createNotSupportedError();\n                    }\n                    const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                    if (nodeNameToProcessorConstructorMap !== undefined) {\n                        if (nodeNameToProcessorConstructorMap.has(name)) {\n                            throw createNotSupportedError();\n                        }\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                    }\n                    else {\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                    }\n                }, nativeContext.sampleRate, undefined, undefined));\n            })\n            : Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const currentIndex = index + 1;\n                index = currentIndex;\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedAudioWorkletProcessor = isSupportingPostMessage\n                    ? 'AudioWorkletProcessor'\n                    : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })(\n                 *     ${ patchedAudioWorkletProcessor },\n                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *         __collectBuffers = (array) => {\n                 *             array.forEach((element) => this.__buffers.add(element.buffer));\n                 *         };\n                 *\n                 *         process (inputs, outputs, parameters) {\n                 *             inputs.forEach(this.__collectBuffers);\n                 *             outputs.forEach(this.__collectBuffers);\n                 *             this.__collectBuffers(Object.values(parameters));\n                 *\n                 *             return super.process(\n                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *                 outputs,\n                 *                 parameters\n                 *             );\n                 *         }\n                 *\n                 *     })\n                 * );\n                 *\n                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                 *\n                 *     process () {\n                 *         return false;\n                 *     }\n                 *\n                 * })`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return nativeContext;\n                    }\n                    // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                })\n                    .then((nativeContextOrBackupOfflineAudioContext) => {\n                    if (nativeAudioWorkletNodeConstructor === null) {\n                        throw new SyntaxError();\n                    }\n                    try {\n                        // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                        new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                    }\n                    catch {\n                        throw new SyntaxError();\n                    }\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n            if (updatedResolvedRequestsOfContext === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                updatedResolvedRequestsOfContext.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n            if (updatedOngoingRequestsOfContext !== undefined) {\n                updatedOngoingRequestsOfContext.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode && !('gain' in audioNode);\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=audio-context-constructor.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n                isScriptProcessorNodeCreated = true;\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                        lastOrientation = orientation;\n                    }\n                    const positon = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                        lastPosition = positon;\n                    }\n                };\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index) => (value) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index) => (value) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input, initialValue, setValue) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return initialValue;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n                overwriteAccessors(audioParam, 'value', (get) => () => get.call(audioParam), (set) => (value) => {\n                    try {\n                        set.call(audioParam, value);\n                    }\n                    catch (err) {\n                        if (err.code !== 9) {\n                            throw err;\n                        }\n                    }\n                    createScriptProcessorNode();\n                    if (isOffline) {\n                        // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                        setValue(value);\n                    }\n                });\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n                return audioParam;\n            };\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        }\n        else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n            channelData[0] = 1;\n            channelData[1] = 1;\n            const source = nativeAudioContext.createBufferSource();\n            source.buffer = ones;\n            source.loop = true;\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n                if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n                source.stop();\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n            source.start();\n        }\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        // Bug #196 Only Safari sets the defaultValue to the initial value.\n        const defaultValue = nativeAudioParam.value;\n        const automationEventList = new AutomationEventList(defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #194: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #195: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData).then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            }, (err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=base-audio-context-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            }\n            catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n                setAudioNodeTailTime(this, 0);\n            }\n            else {\n                this._isBufferNullified = false;\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=convolver-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=create-native-offline-audio-context.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1, port2 } = new MessageChannel();\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n            port1.close();\n            port2.close();\n            resolve();\n        };\n        port2.onmessage = () => closeAndResolve();\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            closeAndResolve();\n        }\n    });\n};\n//# sourceMappingURL=detach-array-buffer.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome and Edge do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete().then(() => resolve(audioBuffer));\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n            setAudioNodeTailTime(this, 0.006);\n        }\n        get attack() {\n            return this._attack;\n        }\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=filter-buffer.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-offline-audio-context.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=minimal-offline-audio-context-constructor.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=native-convolver-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n};\n//# sourceMappingURL=native-delay-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n    return nativeMediaStreamAudioDestinationNode;\n};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome & Edge throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = nativeContext.createPanner();\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        const buffer = new Float32Array(1);\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                getFirstSample(inputBuffer, buffer, 0),\n                getFirstSample(inputBuffer, buffer, 1),\n                getFirstSample(inputBuffer, buffer, 2)\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                getFirstSample(inputBuffer, buffer, 3),\n                getFirstSample(inputBuffer, buffer, 4),\n                getFirstSample(inputBuffer, buffer, 5)\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n//# sourceMappingURL=native-script-processor-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n        // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max', // This attribute has no effect for nodes with no inputs.\n    channelInterpretation: 'speakers', // This attribute has no effect for nodes with no inputs.\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","export const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n//# sourceMappingURL=set-audio-node-tail-time.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=start-rendering.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n            // Bug #197: Safari does not deliver the messages before the promise returned by startRendering() resolves.\n            await new Promise((resolve) => setTimeout(resolve));\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","export const getFirstSample = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n    return buffer[0];\n};\n//# sourceMappingURL=get-first-sample.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const sanitizeChannelSplitterOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n//# sourceMappingURL=sanitize-channel-splitter-options.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { addRecorderAudioWorkletModule, createRecorderAudioWorkletNode } from 'recorder-audio-worklet';\nimport { AudioBuffer, AudioBufferSourceNode, AudioWorkletNode, MediaStreamAudioSourceNode, MinimalAudioContext, addAudioWorkletModule } from 'standardized-audio-context';\nconst ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';\n// @todo This should live in a separate file.\nconst createPromisedAudioNodesEncoderInstanceIdAndPort = async (audioBuffer, audioContext, channelCount, mediaStream, mimeType) => {\n    const { encoderInstanceId, port } = await instantiate(mimeType, audioContext.sampleRate);\n    if (AudioWorkletNode === undefined) {\n        throw new Error(ERROR_MESSAGE);\n    }\n    const audioBufferSourceNode = audioBuffer === null ? null : new AudioBufferSourceNode(audioContext, { buffer: audioBuffer });\n    const mediaStreamAudioSourceNode = new MediaStreamAudioSourceNode(audioContext, { mediaStream });\n    const recorderAudioWorkletNode = createRecorderAudioWorkletNode(AudioWorkletNode, audioContext, { channelCount });\n    return { audioBufferSourceNode, encoderInstanceId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode };\n};\nexport const createWebAudioMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError) => {\n    return (eventTarget, mediaStream, mimeType) => {\n        var _a;\n        const sampleRate = (_a = mediaStream.getAudioTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings().sampleRate;\n        const audioContext = new MinimalAudioContext({ latencyHint: 'playback', sampleRate });\n        /*\n         * Bug #22: Safari adds a certain number of leading zeros which need to be skipped.\n         *\n         * Bug #21: Firefox is the only browser not supporting audio/mp4. This is totally unrelated and just used to apply the fix only for\n         * Safari.\n         */\n        const audioBuffer = MediaRecorder.isTypeSupported('audio/mp4')\n            ? new AudioBuffer({ length: 2688, sampleRate: audioContext.sampleRate })\n            : null;\n        const bufferedArrayBuffers = [];\n        const promisedAudioWorkletModule = addRecorderAudioWorkletModule((url) => {\n            if (addAudioWorkletModule === undefined) {\n                throw new Error(ERROR_MESSAGE);\n            }\n            return addAudioWorkletModule(audioContext, url);\n        });\n        let abortRecording = null;\n        let intervalId = null;\n        let promisedAudioNodesAndEncoderInstanceId = null;\n        let promisedPartialRecording = null;\n        let isAudioContextRunning = true;\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderInstanceId, timeslice) => {\n            const arrayBuffers = await encode(encoderInstanceId, timeslice);\n            if (promisedAudioNodesAndEncoderInstanceId === null) {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderInstanceId, timeslice);\n            }\n        };\n        const resume = () => {\n            isAudioContextRunning = true;\n            return audioContext.resume();\n        };\n        const stop = () => {\n            if (promisedAudioNodesAndEncoderInstanceId === null) {\n                return;\n            }\n            if (abortRecording !== null) {\n                mediaStream.removeEventListener('addtrack', abortRecording);\n                mediaStream.removeEventListener('removetrack', abortRecording);\n            }\n            if (intervalId !== null) {\n                clearTimeout(intervalId);\n            }\n            promisedAudioNodesAndEncoderInstanceId.then(async ({ encoderInstanceId, mediaStreamAudioSourceNode, recorderAudioWorkletNode }) => {\n                if (promisedPartialRecording !== null) {\n                    promisedPartialRecording.catch(() => {\n                        /* @todo Only catch the errors caused by a duplicate call to encode. */\n                    });\n                    promisedPartialRecording = null;\n                }\n                await recorderAudioWorkletNode.stop();\n                mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);\n                const arrayBuffers = await encode(encoderInstanceId, null);\n                if (promisedAudioNodesAndEncoderInstanceId === null) {\n                    await suspend();\n                }\n                dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                bufferedArrayBuffers.length = 0;\n                eventTarget.dispatchEvent(new Event('stop'));\n            });\n            promisedAudioNodesAndEncoderInstanceId = null;\n        };\n        const suspend = () => {\n            isAudioContextRunning = false;\n            return audioContext.suspend();\n        };\n        suspend();\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return promisedAudioNodesAndEncoderInstanceId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';\n            },\n            pause() {\n                if (promisedAudioNodesAndEncoderInstanceId === null) {\n                    throw createInvalidStateError();\n                }\n                if (isAudioContextRunning) {\n                    suspend();\n                    eventTarget.dispatchEvent(new Event('pause'));\n                }\n            },\n            resume() {\n                if (promisedAudioNodesAndEncoderInstanceId === null) {\n                    throw createInvalidStateError();\n                }\n                if (!isAudioContextRunning) {\n                    resume();\n                    eventTarget.dispatchEvent(new Event('resume'));\n                }\n            },\n            start(timeslice) {\n                var _a;\n                if (promisedAudioNodesAndEncoderInstanceId !== null) {\n                    throw createInvalidStateError();\n                }\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                eventTarget.dispatchEvent(new Event('start'));\n                const audioTracks = mediaStream.getAudioTracks();\n                const channelCount = audioTracks.length === 0 ? 2 : ((_a = audioTracks[0].getSettings().channelCount) !== null && _a !== void 0 ? _a : 2);\n                promisedAudioNodesAndEncoderInstanceId = Promise.all([\n                    resume(),\n                    promisedAudioWorkletModule.then(() => createPromisedAudioNodesEncoderInstanceIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType))\n                ]).then(async ([, { audioBufferSourceNode, encoderInstanceId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }]) => {\n                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);\n                    if (audioBufferSourceNode !== null) {\n                        await new Promise((resolve) => {\n                            audioBufferSourceNode.onended = resolve;\n                            audioBufferSourceNode.connect(recorderAudioWorkletNode);\n                            audioBufferSourceNode.start();\n                        });\n                        audioBufferSourceNode.disconnect(recorderAudioWorkletNode);\n                    }\n                    await recorderAudioWorkletNode.record(port);\n                    if (timeslice !== undefined) {\n                        promisedPartialRecording = requestNextPartialRecording(encoderInstanceId, timeslice);\n                    }\n                    return { encoderInstanceId, mediaStreamAudioSourceNode, recorderAudioWorkletNode };\n                });\n                const tracks = mediaStream.getTracks();\n                abortRecording = () => {\n                    stop();\n                    eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n                };\n                mediaStream.addEventListener('addtrack', abortRecording);\n                mediaStream.addEventListener('removetrack', abortRecording);\n                intervalId = setInterval(() => {\n                    const currentTracks = mediaStream.getTracks();\n                    if ((currentTracks.length !== tracks.length || currentTracks.some((track, index) => track !== tracks[index])) &&\n                        abortRecording !== null) {\n                        abortRecording();\n                    }\n                }, 1000);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=web-audio-media-recorder.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { MultiBufferDataView } from 'multi-buffer-data-view';\nimport { on } from 'subscribable-things';\nexport const createWebmPcmMediaRecorderFactory = (createBlobEvent, decodeWebMChunk, readVariableSizeInteger) => {\n    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType) => {\n        const bufferedArrayBuffers = [];\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, { mimeType: 'audio/webm; codecs=pcm' });\n        let promisedPartialRecording = null;\n        let stopRecording = () => { }; // tslint:disable-line:no-empty\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderInstanceId, timeslice) => {\n            const arrayBuffers = await encode(encoderInstanceId, timeslice);\n            if (nativeMediaRecorder.state === 'inactive') {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderInstanceId, timeslice);\n            }\n        };\n        const stop = () => {\n            if (nativeMediaRecorder.state === 'inactive') {\n                return;\n            }\n            if (promisedPartialRecording !== null) {\n                promisedPartialRecording.catch(() => {\n                    /* @todo Only catch the errors caused by a duplicate call to encode. */\n                });\n                promisedPartialRecording = null;\n            }\n            stopRecording();\n            stopRecording = () => { }; // tslint:disable-line:no-empty\n            nativeMediaRecorder.stop();\n        };\n        nativeMediaRecorder.addEventListener('error', (event) => {\n            stop();\n            eventTarget.dispatchEvent(new ErrorEvent('error', {\n                error: event.error\n            }));\n        });\n        nativeMediaRecorder.addEventListener('pause', () => eventTarget.dispatchEvent(new Event('pause')));\n        nativeMediaRecorder.addEventListener('resume', () => eventTarget.dispatchEvent(new Event('resume')));\n        nativeMediaRecorder.addEventListener('start', () => eventTarget.dispatchEvent(new Event('start')));\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return nativeMediaRecorder.state;\n            },\n            pause() {\n                return nativeMediaRecorder.pause();\n            },\n            resume() {\n                return nativeMediaRecorder.resume();\n            },\n            start(timeslice) {\n                const [audioTrack] = mediaStream.getAudioTracks();\n                if (audioTrack !== undefined && nativeMediaRecorder.state === 'inactive') {\n                    // Bug #19: Chrome does not expose the correct channelCount property right away.\n                    const { channelCount, sampleRate } = audioTrack.getSettings();\n                    if (channelCount === undefined) {\n                        throw new Error('The channelCount is not defined.');\n                    }\n                    if (sampleRate === undefined) {\n                        throw new Error('The sampleRate is not defined.');\n                    }\n                    let isRecording = false;\n                    let isStopped = false;\n                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.\n                    let pendingInvocations = 0;\n                    let promisedDataViewElementTypeEncoderInstanceIdAndPort = instantiate(mimeType, sampleRate);\n                    stopRecording = () => {\n                        isStopped = true;\n                    };\n                    const removeEventListener = on(nativeMediaRecorder, 'dataavailable')(({ data }) => {\n                        pendingInvocations += 1;\n                        const promisedArrayBuffer = data.arrayBuffer();\n                        promisedDataViewElementTypeEncoderInstanceIdAndPort = promisedDataViewElementTypeEncoderInstanceIdAndPort.then(async ({ dataView = null, elementType = null, encoderInstanceId, port }) => {\n                            const arrayBuffer = await promisedArrayBuffer;\n                            pendingInvocations -= 1;\n                            const currentDataView = dataView === null\n                                ? new MultiBufferDataView([arrayBuffer])\n                                : new MultiBufferDataView([...dataView.buffers, arrayBuffer], dataView.byteOffset);\n                            if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {\n                                const lengthAndValue = readVariableSizeInteger(currentDataView, 0);\n                                if (lengthAndValue === null) {\n                                    return { dataView: currentDataView, elementType, encoderInstanceId, port };\n                                }\n                                const { value } = lengthAndValue;\n                                if (value !== 172351395) {\n                                    return { dataView, elementType, encoderInstanceId, port };\n                                }\n                                isRecording = true;\n                            }\n                            const { currentElementType, offset, contents } = decodeWebMChunk(currentDataView, elementType, channelCount);\n                            const remainingDataView = offset < currentDataView.byteLength\n                                ? new MultiBufferDataView(currentDataView.buffers, currentDataView.byteOffset + offset)\n                                : null;\n                            contents.forEach((content) => port.postMessage(content, content.map(({ buffer }) => buffer)));\n                            if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {\n                                encode(encoderInstanceId, null).then((arrayBuffers) => {\n                                    dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                                    bufferedArrayBuffers.length = 0;\n                                    eventTarget.dispatchEvent(new Event('stop'));\n                                });\n                                port.postMessage([]);\n                                port.close();\n                                removeEventListener();\n                            }\n                            return { dataView: remainingDataView, elementType: currentElementType, encoderInstanceId, port };\n                        });\n                    });\n                    if (timeslice !== undefined) {\n                        promisedDataViewElementTypeEncoderInstanceIdAndPort.then(({ encoderInstanceId }) => {\n                            if (isStopped) {\n                                return;\n                            }\n                            promisedPartialRecording = requestNextPartialRecording(encoderInstanceId, timeslice);\n                        });\n                    }\n                }\n                nativeMediaRecorder.start(100);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=webm-pcm-media-recorder.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const readVariableSizeIntegerLength = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n    const byte = dataView.getUint8(offset);\n    if (byte > 127) {\n        return 1;\n    }\n    if (byte > 63) {\n        return 2;\n    }\n    if (byte > 31) {\n        return 3;\n    }\n    if (byte > 15) {\n        return 4;\n    }\n    if (byte > 7) {\n        return 5;\n    }\n    if (byte > 3) {\n        return 6;\n    }\n    if (byte > 1) {\n        return 7;\n    }\n    if (byte > 0) {\n        return 8;\n    }\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n    return length === null ? null : length + 8;\n};\n//# sourceMappingURL=read-variable-size-integer-length.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { deregister as drgstr, register as rgstr } from 'media-encoder-host';\nimport { createBlobEventFactory } from './factories/blob-event-factory';\nimport { createDecodeWebMChunk } from './factories/decode-web-m-chunk';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createEventTargetFactory } from './factories/event-target-factory';\nimport { createInvalidModificationError } from './factories/invalid-modification-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaRecorderConstructor } from './factories/media-recorder-constructor';\nimport { createNativeBlobEventConstructor } from './factories/native-blob-event-constructor';\nimport { createNativeMediaRecorderConstructor } from './factories/native-media-recorder-constructor';\nimport { createNativeMediaRecorderFactory } from './factories/native-media-recorder-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createReadElementContent } from './factories/read-element-content';\nimport { createReadElementType } from './factories/read-element-type';\nimport { createReadVariableSizeInteger } from './factories/read-variable-size-integer';\nimport { createWebAudioMediaRecorderFactory } from './factories/web-audio-media-recorder';\nimport { createWebmPcmMediaRecorderFactory } from './factories/webm-pcm-media-recorder';\nimport { createWindow } from './factories/window';\nimport { readVariableSizeIntegerLength } from './functions/read-variable-size-integer-length';\nimport { wrapEventListener } from './functions/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderRegexes = [];\nconst window = createWindow();\nconst nativeBlobEventConstructor = createNativeBlobEventConstructor(window);\nconst createBlobEvent = createBlobEventFactory(nativeBlobEventConstructor);\nconst createWebAudioMediaRecorder = createWebAudioMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError);\nconst readVariableSizeInteger = createReadVariableSizeInteger(readVariableSizeIntegerLength);\nconst readElementContent = createReadElementContent(readVariableSizeInteger);\nconst readElementType = createReadElementType(readVariableSizeInteger);\nconst decodeWebMChunk = createDecodeWebMChunk(readElementContent, readElementType);\nconst createWebmPcmMediaRecorder = createWebmPcmMediaRecorderFactory(createBlobEvent, decodeWebMChunk, readVariableSizeInteger);\nconst createEventTarget = createEventTargetFactory(window);\nconst nativeMediaRecorderConstructor = createNativeMediaRecorderConstructor(window);\nconst mediaRecorderConstructor = createMediaRecorderConstructor(createNativeMediaRecorderFactory(createNotSupportedError), createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, createEventTargetConstructor(createEventTarget, wrapEventListener), nativeMediaRecorderConstructor);\nexport { mediaRecorderConstructor as MediaRecorder };\nconst ports = new WeakMap();\nexport const deregister = async (port) => {\n    await drgstr(port);\n    const encoderRegex = ports.get(port);\n    if (encoderRegex !== undefined) {\n        const index = encoderRegexes.indexOf(encoderRegex);\n        encoderRegexes.splice(index, 1);\n    }\n};\nexport const isSupported = () => createIsSupportedPromise(window);\nexport const register = async (port) => {\n    const encoderRegex = await rgstr(port);\n    encoderRegexes.push(encoderRegex);\n    ports.set(port, encoderRegex);\n};\n//# sourceMappingURL=module.js.map","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n          return cache(collection, nextNumber);\n        }\n        // Quickly check if there is a theoretical chance to generate a new number.\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        }\n        // Otherwise use the full scale of safely usable integers.\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n}));\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.multiBufferDataView = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: true } : { done: false, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = true, u = false; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = true, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\n    function _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\n    function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n    var MultiBufferDataView = /*#__PURE__*/function () {\n      function MultiBufferDataView(buffers) {\n        var byteOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var byteLength = arguments.length > 2 ? arguments[2] : undefined;\n        _classCallCheck(this, MultiBufferDataView);\n        if (byteOffset < 0 || byteLength !== undefined && byteLength < 0) {\n          throw new RangeError();\n        }\n        var availableBytes = buffers.reduce(function (length, buffer) {\n          return length + buffer.byteLength;\n        }, 0);\n        if (byteOffset > availableBytes || byteLength !== undefined && byteOffset + byteLength > availableBytes) {\n          throw new RangeError();\n        }\n        var dataViews = [];\n        var effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        var truncatedBuffers = [];\n        var consumedByteLength = 0;\n        var truncatedByteOffset = byteOffset;\n        var _iterator = _createForOfIteratorHelper(buffers),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var buffer = _step.value;\n            if (truncatedBuffers.length === 0) {\n              if (buffer.byteLength > truncatedByteOffset) {\n                consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                var byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n              } else {\n                truncatedByteOffset -= buffer.byteLength;\n              }\n            } else if (consumedByteLength < effectiveByteLength) {\n              consumedByteLength += buffer.byteLength;\n              var _byteLengthOfDataView = consumedByteLength > effectiveByteLength ? buffer.byteLength - consumedByteLength + effectiveByteLength : buffer.byteLength;\n              dataViews.push(new DataView(buffer, 0, _byteLengthOfDataView));\n              truncatedBuffers.push(buffer);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n      }\n      return _createClass(MultiBufferDataView, [{\n        key: \"buffers\",\n        get: function get() {\n          return this._buffers;\n        }\n      }, {\n        key: \"byteLength\",\n        get: function get() {\n          return this._byteLength;\n        }\n      }, {\n        key: \"byteOffset\",\n        get: function get() {\n          return this._byteOffset;\n        }\n      }, {\n        key: \"getFloat32\",\n        value: function getFloat32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getFloat32(0, littleEndian);\n        }\n      }, {\n        key: \"getFloat64\",\n        value: function getFloat64(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n          this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n          this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n          this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n          return this._internalBuffer.getFloat64(0, littleEndian);\n        }\n      }, {\n        key: \"getInt16\",\n        value: function getInt16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          return this._internalBuffer.getInt16(0, littleEndian);\n        }\n      }, {\n        key: \"getInt32\",\n        value: function getInt32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getInt32(0, littleEndian);\n        }\n      }, {\n        key: \"getInt8\",\n        value: function getInt8(byteOffset) {\n          var _this$_findDataViewWi = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi2 = _slicedToArray(_this$_findDataViewWi, 2),\n            dataView = _this$_findDataViewWi2[0],\n            byteOffsetOfDataView = _this$_findDataViewWi2[1];\n          return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"getUint16\",\n        value: function getUint16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          return this._internalBuffer.getUint16(0, littleEndian);\n        }\n      }, {\n        key: \"getUint32\",\n        value: function getUint32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getUint32(0, littleEndian);\n        }\n      }, {\n        key: \"getUint8\",\n        value: function getUint8(byteOffset) {\n          var _this$_findDataViewWi3 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi4 = _slicedToArray(_this$_findDataViewWi3, 2),\n            dataView = _this$_findDataViewWi4[0],\n            byteOffsetOfDataView = _this$_findDataViewWi4[1];\n          return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"setFloat32\",\n        value: function setFloat32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setFloat64\",\n        value: function setFloat64(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat64(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n          this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n          this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n          this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n          this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n        }\n      }, {\n        key: \"setInt16\",\n        value: function setInt16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt16(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setInt32\",\n        value: function setInt32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setInt8\",\n        value: function setInt8(byteOffset, value) {\n          var _this$_findDataViewWi5 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi6 = _slicedToArray(_this$_findDataViewWi5, 2),\n            dataView = _this$_findDataViewWi6[0],\n            byteOffsetOfDataView = _this$_findDataViewWi6[1];\n          dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"setUint16\",\n        value: function setUint16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint16(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setUint32\",\n        value: function setUint32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setUint8\",\n        value: function setUint8(byteOffset, value) {\n          var _this$_findDataViewWi7 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi8 = _slicedToArray(_this$_findDataViewWi7, 2),\n            dataView = _this$_findDataViewWi8[0],\n            byteOffsetOfDataView = _this$_findDataViewWi8[1];\n          dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"_findDataViewWithOffset\",\n        value: function _findDataViewWithOffset(byteOffset) {\n          var byteOffsetOfDataView = 0;\n          var _iterator2 = _createForOfIteratorHelper(this._dataViews),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var dataView = _step2.value;\n              var byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n              if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n              }\n              byteOffsetOfDataView = byteOffsetOfNextDataView;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          throw new RangeError();\n        }\n      }]);\n    }();\n\n    exports.MultiBufferDataView = MultiBufferDataView;\n\n}));\n","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["global","factory","exports","_slicedToArray","_classCallCheck","_createClass","createExtendedExponentialRampToValueAutomationEvent","value","endTime","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","target","timeConstant","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","_getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","getExponentialRampValueAtTime","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","upperIndex","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","eventTime","removedAutomationEvent","lastAutomationEvent","startValue","truncatedAutomationEvent","ratio","length","fraction","i","factor","_index","previousAutomationEvent","persistentAutomationEvent","remainingAutomationEvents","firstRemainingAutomationEvent","indexOfNextEvent","indexOfCurrentEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","cancelTime","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","isMessagePort","sender","PORT_MAP","extendBrokerImplementation","partialBrokerImplementation","call","port1","port2","portId","port","ONGOING_REQUESTS","createOrGetOngoingRequests","ongoingRequests","createBroker","brokerImplementation","fullBrokerImplementation","message","id","reject","resolve","method","params","transferables","notify","functions","key","handler","encoderIds","encoderInstanceIds","messagePorts","wrap","encoderId","result","encoderInstanceId","timeslice","arrayBuffers","mimeType","sampleRate","err","load","url","worker","blob","mediaEncoderHost","connect","deregister","disconnect","encode","instantiate","isSupported","register","createBlobEventFactory","nativeBlobEventConstructor","type","blobEventInit","createDecodeWebMChunk","readElementContent","readElementType","dataView","elementType","channelCount","contents","currentElementType","offset","lengthAndType","contentAndLength","content","createEventTargetConstructor","createEventTarget","wrapEventListener","nativeEventTarget","listener","options","wrappedEventListener","event","createEventTargetFactory","window","createInvalidModificationError","createInvalidStateError","createMediaRecorderConstructor","createNativeMediaRecorder","createNotSupportedError","createWebAudioMediaRecorder","createWebmPcmMediaRecorder","encoderRegexes","eventTargetConstructor","nativeMediaRecorderConstructor","stream","internalMediaRecorder","regex","boundListener","createNativeBlobEventConstructor","createNativeMediaRecorderConstructor","createNativeMediaRecorderFactory","mediaRecorderOptions","bufferedBlobEventListeners","dataAvailableListeners","errorListeners","flags","nativeMediaRecorder","stopListeners","isTrusted","addEventListener","patchedEventListener","bufferedBlobEvents","isSliced","isActive","dataAvailableListener","blobEvent","data","removeEventListener","errorListener","stopListener","start","stop","createReadElementContent","readVariableSizeInteger","lengthAndValue","numberOfSamples","elementOffset","j","createReadElementType","createReadVariableSizeInteger","readVariableSizeIntegerLength","firstDataByteOffset","observable","patch","arg","noop","rethrow","error","toObserver","observer","createAnimationFrame","emitNotSupportedError","wrapSubscribeFunction","animationFrameHandle","animationFrameCallback","timestamp","createAttribute","mapSubscribableThing","mutations","prependSubscribableThing","htmlElement","name","getAttribute","createGeolocation","watchId","position","createIntersections","intersectionObserverObserver","entries","createMapSubscribableThing","subscribableThing","map","createMediaDevices","enumerateDevices","mediaDevices","unsubscribe","createMediaQueryMatch","mediaQueryString","mediaQueryList","createMetrics","performanceObserver","entryList","createMidiInputs","midiAccess","midiInputs","emitMidiInputs","midiAccessInputs","createMidiOutputs","midiOutputs","emitMidiOutputs","midiAccessOutputs","createMutations","mutationObserver","records","createOn","createOnline","emitFalse","emitTrue","createPermissionState","permissionDescriptor","permissionStatus","createPrependSubscribableThing","prependedValue","createReports","reportingObserver","reportList","createResizes","resizeObserver","createUnhandledRejection","coolingOffPeriod","possiblyUnhandledRejections","intervalId","deletePossiblyUnhandledRejection","promise","emitUnhandledRejection","latestTimestampToEmit","reason","registerPossiblyUnhandledRejection","createVideoFrame","videoElement","videoFrameHandle","videoFrameCallback","now","metadata","createWakeLock","releaseWakeLock","wakeLockSentinel","removeReleaseEventListener","unsubscribeWhileRequesting","requestWakeLock","createWindow","createWrapSubscribeFunction","emptyFunction","isNextFunction","args","innerSubscribe","subscribe","animationFrame","attribute","geolocation","intersections","mediaQueryMatch","metrics","on","online","permissionState","reports","resizes","unhandledRejection","videoFrame","wakeLock","JSON_RPC_ERROR_CODES","createErrorWithMessageAndStatus","status","receiver","workerImplementation","messageHandler","response","synchronousResponse","DESTROY_WORKER_FUNCTIONS","createWorker","partialWorkerImplementation","isSupportedFunction","destroyWorker","fullWorkerImplementation","createAddRecorderAudioWorkletModule","blobConstructor","urlConstructor","worklet","addAudioWorkletModule","createListener","ongoingRequest","createPostMessageFactory","generateUniqueNumber","createRecorderAudioWorkletNodeFactory","createPostMessage","validateState","audioWorkletNodeConstructor","context","audioWorkletNode","postMessage","state","encoderPort","expectedStates","currentState","expectedState","addRecorderAudioWorkletModule","createRecorderAudioWorkletNode","createAbortError","createAddActiveInputConnectionToAudioNode","insertElementInSet","activeInputs","source","output","input","eventListener","ignoreDuplicates","activeInputConnection","createAddAudioNodeConnections","audioNodeConnectionsStore","audioNode","audioNodeRenderer","nativeAudioNode","createAddAudioParamConnections","audioParamConnectionsStore","audioParam","audioParamRenderer","ACTIVE_AUDIO_NODE_STORE","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","isConstructible","constructible","proxy","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","unresolvedUrl","importStatementWithResolvedUrl","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","createAddAudioWorkletModule","cacheTestResult","evaluateSource","exposeCurrentFrameAndCurrentTime","fetchSource","getNativeContext","getOrCreateBackupOfflineAudioContext","isNativeOfflineAudioContext","nativeAudioWorkletNodeConstructor","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","nativeContext","absoluteUrl","wrappedSource","evaluateAudioWorkletGlobalScope","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","backupOfflineAudioContext","nativeContextOrBackupOfflineAudioContext","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","getValueForKey","pickElementFromSet","set","predicate","matchingElements","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputs","passiveInputConnections","matchingConnection","passiveInputConnection","getEventListenersOfAudioNode","setInternalStateToActive","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","connections","createAddConnectionToAudioNode","addActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","connectNativeAudioNodeToNativeAudioNode","deleteActiveInputConnectionToAudioNode","disconnectNativeAudioNodeFromNativeAudioNode","getAudioNodeConnections","getAudioNodeTailTime","getNativeAudioNode","isActiveAudioNode","isPartOfACycle","isPassiveAudioNode","tailTimeTimeoutIds","destination","isOffline","outputs","eventListeners","nativeDestinationAudioNode","nativeSourceAudioNode","partialConnection","tailTime","tailTimeTimeoutId","outputConnection","createAddPassiveInputConnectionToAudioNode","createAddSilentConnection","createNativeGainNode","nativeAudioScheduledSourceNode","nativeGainNode","createAddUnrenderedAudioWorkletNode","getUnrenderedAudioWorkletNodes","DEFAULT_OPTIONS","createAnalyserNodeConstructor","audionNodeConstructor","createAnalyserNodeRenderer","createIndexSizeError","createNativeAnalyserNode","mergedOptions","nativeAnalyserNode","analyserNodeRenderer","maxDecibels","minDecibels","array","isOwnedByContext","createAnalyserNodeRendererFactory","renderInputsOfAudioNode","renderedNativeAnalyserNodes","createAnalyserNode","nativeOfflineAudioContext","renderedNativeAnalyserNode","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","createAudioBufferConstructor","audioBufferStore","nativeAudioBufferConstructor","nativeOfflineAudioContextConstructor","testNativeAudioBufferConstructorSupport","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","AudioBuffer","numberOfChannels","instance","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","createAudioBufferSourceNodeConstructor","audioNodeConstructor","createAudioBufferSourceNodeRenderer","createAudioParam","createNativeAudioBufferSourceNode","nativeAudioBufferSourceNode","audioBufferSourceNodeRenderer","wrappedListener","nativeOnEnded","when","resetInternalStateToPassive","createAudioBufferSourceNodeRendererFactory","connectAudioParam","renderAutomation","renderedNativeAudioBufferSourceNodes","createAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","renderedNativeAudioBufferSourceNode","isAudioBufferSourceNode","isBiquadFilterNode","isConstantSourceNode","isGainNode","isOscillatorNode","isStereoPannerNode","getAudioParamConnections","deactivateActiveAudioNodeInputConnections","trace","audioParams","audioParamConnections","deactivateAudioGraph","isValidLatencyHint","latencyHint","createAudioContextConstructor","baseAudioContextConstructor","createUnknownError","mediaElementAudioSourceNodeConstructor","mediaStreamAudioDestinationNodeConstructor","mediaStreamAudioSourceNodeConstructor","mediaStreamTrackAudioSourceNodeConstructor","nativeAudioContextConstructor","nativeAudioContext","revokeState","mediaElement","mediaStream","mediaStreamTrack","resolvePromise","createAudioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","audioDestinationNodeRenderer","renderedNativeAudioDestinationNodes","createAudioDestinationNode","renderedNativeAudioDestinationNode","createAudioListenerFactory","createNativeChannelMergerNode","createNativeConstantSourceNode","createNativeScriptProcessorNode","getFirstSample","overwriteAccessors","nativeListener","createFakeAudioParams","buffer","channelMergerNode","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","scriptProcessorNode","inputBuffer","orientation","positon","createSetOrientation","createSetPosition","createFakeAudioParam","initialValue","setValue","constantSourceNode","get","cancelAndHoldAtTime","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setTargetAtTime","setValueAtTime","setValueCurveAtTime","forwardX","forwardY","forwardZ","positionX","positionY","positionZ","upX","upY","upZ","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","element","lmnt","addActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","fakeNativeDestinationAudioNode","deleteActiveInputConnection","activeInputConnections","deleteActiveInputConnectionToAudioParam","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","getNativeAudioParam","testAudioNodeDisconnectMethodSupport","analyzer","dummy","ones","channelData","chnnlDt","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","count","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","connection","destinationOrOutput","filteredConnections","addConnectionToAudioParamOfAudioContext","nativeAudioParam","deleteInputConnectionOfAudioNode","deleteInputConnectionOfAudioParam","deleteInputsOfAudioNode","deleteInputsOfAudioParam","deleteAnyConnection","audioNodeConnectionsOfSource","destinations","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","createInvalidAccessError","decrementCycleCounter","detectCycles","isNativeAudioContext","isNativeAudioParam","isPassive","createAudioParamFactory","addAudioParamConnections","audioParamAudioNodeStore","audioParamStore","createAudioParamRenderer","setValueAtTimeUntilPossible","isAudioParamOfOfflineAudioContext","maxValue","minValue","automationEventList","previousLastEvent","currentLastEvent","currentTime","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","ReadOnlyMap","parameters","callback","thisArg","createAudioWorkletNodeConstructor","addUnrenderedAudioWorkletNode","createAudioWorkletNodeRenderer","createNativeAudioWorkletNode","getBackupOfflineAudioContext","sanitizeAudioWorkletNodeOptions","setActiveAudioWorkletNodeInputs","testAudioWorkletNodeOptionsClonability","_a","processorConstructor","nativeAudioWorkletNode","audioWorkletNodeRenderer","nm","nativeOnProcessorError","copyFromChannel","parent","channelNumber","bufferOffset","slicedInput","copyToChannel","createNestedArrays","x","y","arrays","getAudioWorkletProcessor","nodeToProcessorMap","processBuffer","renderedBuffer","outputChannelCount","numberOfInputChannels","numberOfOutputChannels","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","inputs","prmtrs","k","potentiallyEmptyInputs","activeSourceFlag","outputChannelSplitterNodeOutput","createAudioWorkletNodeRendererFactory","connectMultipleOutputs","createNativeChannelSplitterNode","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","renderNativeOfflineAudioContext","renderedNativeAudioNodes","processedBufferPromise","createAudioNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","outputChannelSplitterNode","outputChannelMergerNodes","outputGainNode","numberOfParameters","partialOfflineAudioContext","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","gainNode","audioBufferSourceNode","outputChannelMergerNode","renderedNativeAudioWorkletNodeOrGainNode","createBaseAudioContextConstructor","analyserNodeConstructor","audioBufferConstructor","audioBufferSourceNodeConstructor","biquadFilterNodeConstructor","channelMergerNodeConstructor","channelSplitterNodeConstructor","constantSourceNodeConstructor","convolverNodeConstructor","decodeAudioData","delayNodeConstructor","dynamicsCompressorNodeConstructor","gainNodeConstructor","iIRFilterNodeConstructor","minimalBaseAudioContextConstructor","oscillatorNodeConstructor","pannerNodeConstructor","periodicWaveConstructor","stereoPannerNodeConstructor","waveShaperNodeConstructor","_nativeContext","numberOfInputs","numberOfOutputs","maxDelayTime","feedforward","feedback","real","imag","constraints","audioData","successCallback","errorCallback","createBiquadFilterNodeConstructor","createBiquadFilterNodeRenderer","createNativeBiquadFilterNode","setAudioNodeTailTime","nativeBiquadFilterNode","biquadFilterNodeRenderer","frequencyHz","magResponse","phaseResponse","createBiquadFilterNodeRendererFactory","renderedNativeBiquadFilterNodes","createBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","renderedNativeBiquadFilterNode","createCacheTestResult","ongoingTests","testResults","tester","test","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createChannelMergerNodeConstructor","createChannelMergerNodeRenderer","nativeChannelMergerNode","channelMergerNodeRenderer","createChannelMergerNodeRendererFactory","renderedNativeAudioNode","createChannelSplitterNodeConstructor","createChannelSplitterNodeRenderer","sanitizeChannelSplitterOptions","nativeChannelSplitterNode","channelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","createConnectAudioParam","renderInputsOfAudioParam","createConnectMultipleOutputs","outputAudioNodes","outputAudioNode","createConnectedNativeAudioBufferSourceNodeFactory","createConstantSourceNodeConstructor","createConstantSourceNodeRendererFactory","nativeConstantSourceNode","constantSourceNodeRenderer","renderedNativeConstantSourceNodes","createConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","renderedNativeConstantSourceNode","createConvertNumberToUnsignedLong","unit32Array","createConvolverNodeConstructor","createConvolverNodeRenderer","createNativeConvolverNode","nativeConvolverNode","convolverNodeRenderer","createConvolverNodeRendererFactory","renderedNativeConvolverNodes","createConvolverNode","renderedNativeConvolverNode","createCreateNativeOfflineAudioContext","createDataCloneError","detachArrayBuffer","arrayBuffer","closeAndResolve","createDecodeAudioData","createEncodingError","detachedArrayBuffers","isNativeContext","testPromiseSupport","anyContext","complete","fail","createDecrementCycleCounter","cycleCounters","cycleCounter","nativeDestinationAudioParam","createDelayNodeConstructor","createDelayNodeRenderer","createNativeDelayNode","nativeDelayNode","delayNodeRenderer","createDelayNodeRendererFactory","renderedNativeDelayNodes","createDelayNode","nativeDelayNodeIsOwnedByContext","renderedNativeDelayNode","createDeleteActiveInputConnectionToAudioNode","createDeleteUnrenderedAudioWorkletNode","isDelayNode","createDetectCycles","chain","nextLink","mergedCycles","nestedCycles","getOutputAudioNodeAtIndex","createDisconnectMultipleOutputs","createDynamicsCompressorNodeConstructor","createDynamicsCompressorNodeRenderer","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","dynamicsCompressorNodeRenderer","previousChannelCount","createDynamicsCompressorNodeRendererFactory","renderedNativeDynamicsCompressorNodes","createDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","renderedNativeDynamicsCompressorNode","createEvaluateSource","head","script","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","src","lineno","colno","_nativeEventTarget","createExposeCurrentFrameAndCurrentTime","fn","createFetchSource","createGainNodeConstructor","createGainNodeRenderer","gainNodeRenderer","createGainNodeRendererFactory","renderedNativeGainNodes","createGainNode","nativeGainNodeIsOwnedByContext","renderedNativeGainNode","createGetActiveAudioWorkletNodeInputs","activeAudioWorkletNodeInputsStore","createGetAudioNodeRenderer","createGetAudioNodeTailTime","audioNodeTailTimeStore","createGetAudioParamRenderer","createGetBackupOfflineAudioContext","backupOfflineAudioContextStore","createGetNativeContext","contextStore","createGetOrCreateBackupOfflineAudioContext","createGetUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodeStore","unrenderedAudioWorkletNodes","wrapIIRFilterNodeGetFrequencyResponseMethod","nativeIIRFilterNode","getFrequencyResponse","createIIRFilterNodeConstructor","createNativeIIRFilterNode","createIIRFilterNodeRenderer","iirFilterNodeRenderer","filterBuffer","feedbackLength","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","filterFullBuffer","convertedFeedback","convertedFeedforward","filteredBuffer","createIIRFilterNodeRendererFactory","filteredBufferPromise","nativeIIRFilterNodeIsOwnedByContext","createIncrementCycleCounterFactory","createIsAnyAudioContext","anything","createIsAnyAudioNode","audioNodeStore","createIsAnyAudioParam","createIsAnyOfflineAudioContext","createIsNativeAudioContext","createIsNativeAudioNode","createIsNativeAudioParam","createIsNativeContext","createIsNativeOfflineAudioContext","createIsSecureContext","createMediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","createMediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","createMediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","nativeMediaStreamTrackAudioSourceNode","createMinimalAudioContextConstructor","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","nativeOnStateChange","uint32Array","createMinimalOfflineAudioContextConstructor","createNativeOfflineAudioContext","startRendering","delayStateChangeEvent","createMonitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","wrapAnalyserNodeGetFloatTimeDomainDataMethod","byteTimeDomainData","createNativeAnalyserNodeFactory","createNativeAudioBufferConstructor","assignNativeAudioNodeAudioParamValue","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","isScheduled","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeAudioBufferSourceNodeFactory","addSilentConnection","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","createNativeAudioContextConstructor","createNativeAudioDestinationNodeFactory","isNodeOfNativeOfflineAudioContext","createNativeAudioWorkletNodeConstructor","testClonabilityOfAudioWorkletNodeOptions","audioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createNativeAudioWorkletNodeFaker","monitorConnections","baseLatency","patchedEventListeners","onprocessorerror","unpatchedEventListener","computeBufferSize","cloneAudioWorkletNodeOptions","createAudioWorkletProcessorPromise","clonedAudioWorkletNodeOptions","createAudioWorkletProcessor","audioWorkletProcessorPromise","createNativeAudioWorkletNodeFakerFactory","getActiveAudioWorkletNodeInputs","messageChannel","bufferSize","parameterMap","channelInterpretation","nativeAudioWorkletNodeFaker","_","onmessage","dWrkltPrcssr","disconnectOutputsGraph","activeInputIndexes","outputBuffer","isConnected","disconnectFakeGraph","connectFakeGraph","createNativeChannelMergerNodeFactory","wrapChannelMergerNode","wrapChannelSplitterNode","channelSplitterNode","createNativeConstantSourceNodeFactory","createNativeConstantSourceNodeFaker","interceptConnections","original","interceptor","createNativeConstantSourceNodeFakerFactory","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConvolverNodeFactory","createNativeDynamicsCompressorNodeFactory","createNativeIIRFilterNodeFactory","createNativeIIRFilterNodeFaker","divide","a","b","denominator","multiply","evaluatePolynomial","coefficient","z","createNativeIIRFilterNodeFakerFactory","channelCountMode","bufferIndexes","xBuffers","yBuffers","nyquist","omega","numerator","audioStreamTracks","filteredAudioStreamTracks","createNativeMediaStreamTrackAudioSourceNodeFactory","createNativeOfflineAudioContextConstructor","createNativeOscillatorNodeFactory","nativeOscillatorNode","createNativePannerNodeFactory","createNativePannerNodeFaker","nativePannerNode","createNativePannerNodeFakerFactory","createNativeWaveShaperNode","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","refDistance","rolloffFactor","pannerNode","SINGLE_CHANNEL_OPTIONS","inputGainNode","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePeriodicWaveFactory","disableNormalization","convertedImag","convertedReal","nativePeriodicWave","createNativeStereoPannerNodeFactory","createNativeStereoPannerNodeFaker","nativeStereoPannerNode","createNativeStereoPannerNodeFakerFactory","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraphForMono","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","buildInternalGraphForStereo","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","centerIndex","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraph","pan","connectGraph","disconnectGraph","nativeStereoPannerNodeFakerFactory","createNativeWaveShaperNodeFactory","createConnectedNativeAudioBufferSourceNode","createNativeWaveShaperNodeFaker","isDCCurve","nativeWaveShaperNode","curve","disconnectNativeAudioBufferSourceNode","createNativeWaveShaperNodeFakerFactory","oversample","negativeWaveShaperNode","positiveWaveShaperNode","invertGainNode","revertGainNode","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","createOfflineAudioContextConstructor","c","createOscillatorNodeConstructor","createNativeOscillatorNode","createOscillatorNodeRenderer","oscillatorNodeRenderer","periodicWave","createOscillatorNodeRendererFactory","renderedNativeOscillatorNodes","createOscillatorNode","nativeOscillatorNodeIsOwnedByContext","renderedNativeOscillatorNode","createPannerNodeConstructor","createNativePannerNode","createPannerNodeRenderer","pannerNodeRenderer","createPannerNodeRendererFactory","renderedBufferPromise","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","renderedNativeGainNodeOrNativePannerNode","createPeriodicWaveConstructor","createNativePeriodicWave","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","createRenderAutomation","getAudioParamRenderer","createRenderInputsOfAudioNode","getAudioNodeRenderer","allRenderingPromises","renderingPromises","createRenderInputsOfAudioParam","createRenderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","createSetActiveAudioWorkletNodeInputs","createSetAudioNodeTailTime","createStartRendering","createStereoPannerNodeConstructor","createNativeStereoPannerNode","createStereoPannerNodeRenderer","stereoPannerNodeRenderer","createStereoPannerNodeRendererFactory","renderedNativeStereoPannerNodes","createStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","renderedNativeStereoPannerNode","createTestAudioBufferConstructorSupport","createTestAudioWorkletProcessorPostMessageSupport","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","oscillator","createTestOfflineAudioContextCurrentTimeSupport","createWaveShaperNodeConstructor","createWaveShaperNodeRenderer","waveShaperNodeRenderer","createWaveShaperNodeRendererFactory","renderedNativeWaveShaperNodes","createWaveShaperNode","renderedNativeWaveShaperNode","createWrapAudioBufferCopyChannelMethods","convertNumberToUnsignedLong","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","nullifiedBuffer","createWrapChannelMergerNode","object","property","createGetter","createSetter","prototype","wrapAudioBufferSourceNodeStartMethodOffsetClamping","clampedOffset","disconnectGainNode","isStopped","descriptor","createConstantSourceNodeRenderer","isSecureContext","audioContextConstructor","minimalAudioContextConstructor","minimalOfflineAudioContextConstructor","offlineAudioContextConstructor","isAnyAudioContext","isAnyAudioNode","isAnyAudioParam","isAnyOfflineAudioContext","ERROR_MESSAGE","createPromisedAudioNodesEncoderInstanceIdAndPort","audioContext","mediaStreamAudioSourceNode","recorderAudioWorkletNode","createWebAudioMediaRecorderFactory","createBlobEvent","eventTarget","bufferedArrayBuffers","promisedAudioWorkletModule","abortRecording","promisedAudioNodesAndEncoderInstanceId","promisedPartialRecording","isAudioContextRunning","dispatchDataAvailableEvent","requestNextPartialRecording","resume","suspend","audioTracks","tracks","currentTracks","track","createWebmPcmMediaRecorderFactory","decodeWebMChunk","stopRecording","audioTrack","isRecording","pendingInvocations","promisedDataViewElementTypeEncoderInstanceIdAndPort","promisedArrayBuffer","currentDataView","remainingDataView","byte","mediaRecorderConstructor","ports","encoderRegex","createAddUniqueNumber","number","createCache","lastNumberWeakMap","collection","nextNumber","MAX_SAFE_INTEGER","TWO_TO_THE_POWER_OF_TWENTY_NINE","TWO_TO_THE_POWER_OF_THIRTY","createGenerateUniqueNumber","cache","lastNumber","LAST_NUMBER_WEAK_MAP","addUniqueNumber","_createForOfIteratorHelper","r","e","t","_unsupportedIterableToArray","_n","F","o","u","_arrayLikeToArray","n","MultiBufferDataView","buffers","byteOffset","byteLength","availableBytes","dataViews","effectiveByteLength","truncatedBuffers","consumedByteLength","truncatedByteOffset","_iterator","_step","byteLengthOfDataView","_byteLengthOfDataView","littleEndian","_this$_findDataViewWi","_this$_findDataViewWi2","byteOffsetOfDataView","_this$_findDataViewWi3","_this$_findDataViewWi4","_this$_findDataViewWi5","_this$_findDataViewWi6","_this$_findDataViewWi7","_this$_findDataViewWi8","_iterator2","_step2","byteOffsetOfNextDataView","module","_arrayWithHoles","toPropertyKey","_defineProperties","_iterableToArrayLimit","l","f","_nonIterableRest","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_typeof","toPrimitive","arrayLikeToArray"],"sourceRoot":""}