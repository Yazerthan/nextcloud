{"version":3,"file":"talk-files-sidebar-call-chunk.js?v=412586b4c4faa51e9f34","mappings":"8PAgBO,SAASA,GAAe,CAC9B,MAAMC,KAAgB,KAAiB,EAEvC,IAAIC,EAAqB,GAEzB,MAAMC,KAA2B,MAAS,IAAMF,EAAc,wBAAwB,KAEtF,MAAME,EAA2BC,GAAa,CACzCA,GAAY,CAACF,GAChBG,EAAkB,CAEpB,CAAC,EAED,MAAMA,EAAoB,IAAM,CAC/BH,EAAqB,MAErB,SAAU,KAAE,SAAU,6BAA6B,EAAI;AAAA,EAAO,IAAqB,CAClF,QAAS,IACV,CAAC,CACF,EAEA,OAAOC,CACR,C,eCnCA,MAAMG,EAAa,CAAE,MAAO,uBAAwB,EAUpD,KAA4B,MAAiB,CAC3C,OAAQ,uBACR,MAAMC,EAAS,CAEjBP,EAAa,EAEb,MAAMQ,KAA6BC,EAAA,GAAuB,EACpDC,KAAQC,EAAA,GAAY,EAE1B,OAAO,iBAAiB,eAAgBC,CAAa,EACrDC,EAAyC,KAEzC,MAAgB,IAAM,CACrB,OAAO,oBAAoB,eAAgBD,CAAa,EACxDE,EAA6B,CAC9B,CAAC,EAOD,SAASF,EAAcG,EAA0B,CAC5CP,EAA2B,OAI/BO,EAAM,eAAe,CACtB,CAKA,SAASF,GAA2C,CACnD,MAAMG,EAAS,SAAS,cAAc,2BAA2B,EACjE,GAAI,CAACA,EACJ,OAEDA,EAAO,UAAU,IAAI,gBAAgB,EAErC,MAAMC,EAAqB,SAAS,cAAc,qBAAqB,EACvEA,GAAoB,aAAa,kBAAmB,MAAM,EAC1DA,GAAoB,aAAa,WAAY,MAAM,CACpD,CAKA,SAASH,GAA+B,CACvC,MAAME,EAAS,SAAS,cAAc,2BAA2B,EACjE,GAAI,CAACA,EACJ,OAEDA,EAAO,UAAU,OAAO,gBAAgB,EAExC,MAAMC,EAAqB,SAAS,cAAc,qBAAqB,EACvEA,GAAoB,gBAAgB,iBAAiB,EACrDA,GAAoB,gBAAgB,UAAU,CAC/C,CAEA,MAAO,CAACC,EAAUC,QACR,MAAW,KAAG,MAAa,KAAW,CAAE,GAAI,2BAA4B,EAAG,IACjF,MAAoB,MAAOb,EAAY,IACrC,MAAac,EAAA,EAAQ,CACnB,aAAc,GACd,aAAc,EAChB,CAAC,KACD,MAAaC,EAAA,EAAU,CACrB,SAAO,MAAOX,CAAK,EACnB,aAAc,EAChB,EAAG,KAAM,EAAG,CAAC,OAAO,CAAC,CACvB,CAAC,CACH,CAAC,EAEH,CAEA,CAAC,E,eChFD,WAFiC,KAAgB,EAAQ,CAAC,CAAC,YAAY,iBAAiB,CAAC,CAAC,C","sources":["webpack:///talk/src/composables/useHashCheck.js","webpack:///talk/src/views/FilesSidebarCallView.vue","webpack://talk/./src/views/FilesSidebarCallView.vue?48c3"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { showError, TOAST_PERMANENT_TIMEOUT } from '@nextcloud/dialogs'\nimport { t } from '@nextcloud/l10n'\nimport { computed, watch } from 'vue'\nimport { useTalkHashStore } from '../stores/talkHash.js'\nimport { messagePleaseReload } from '../utils/talkDesktopUtils.ts'\n\n/**\n * Check whether the conflicting session detected or not, and navigate to another page\n *\n * @return {import('vue').ComputedRef<boolean>}\n */\nexport function useHashCheck() {\n\tconst talkHashStore = useTalkHashStore()\n\n\tlet reloadWarningShown = false\n\n\tconst isNextcloudTalkHashDirty = computed(() => talkHashStore.isNextcloudTalkHashDirty)\n\n\twatch(isNextcloudTalkHashDirty, (newValue) => {\n\t\tif (newValue && !reloadWarningShown) {\n\t\t\tshowReloadWarning()\n\t\t}\n\t})\n\n\tconst showReloadWarning = () => {\n\t\treloadWarningShown = true\n\n\t\tshowError(t('spreed', 'Nextcloud Talk was updated.') + '\\n' + messagePleaseReload, {\n\t\t\ttimeout: TOAST_PERMANENT_TIMEOUT,\n\t\t})\n\t}\n\n\treturn isNextcloudTalkHashDirty\n}\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, createElementVNode as _createElementVNode, Teleport as _Teleport, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"talk-sidebar-callview\" }\n\nimport { onBeforeUnmount } from 'vue'\nimport CallView from '../components/CallView/CallView.vue'\nimport TopBar from '../components/TopBar/TopBar.vue'\nimport { useGetToken } from '../composables/useGetToken.ts'\nimport { useHashCheck } from '../composables/useHashCheck.js'\nimport { useSessionIssueHandler } from '../composables/useSessionIssueHandler.ts'\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'FilesSidebarCallView',\n  setup(__props) {\n\nuseHashCheck()\n\nconst isLeavingAfterSessionIssue = useSessionIssueHandler()\nconst token = useGetToken()\n\nwindow.addEventListener('beforeunload', preventUnload)\nreplaceSidebarHeaderContentsWithCallView()\n\nonBeforeUnmount(() => {\n\twindow.removeEventListener('beforeunload', preventUnload)\n\trestoreSidebarHeaderContents()\n})\n\n/**\n * Prevent unloading the page if the user is in ongoing call\n *\n * @param event\n */\nfunction preventUnload(event: BeforeUnloadEvent) {\n\tif (isLeavingAfterSessionIssue.value) {\n\t\treturn\n\t}\n\n\tevent.preventDefault()\n}\n\n/**\n * Hides the original sidebar header content (except the close button) and shows the call view instead.\n */\nfunction replaceSidebarHeaderContentsWithCallView() {\n\tconst header = document.querySelector('header.app-sidebar-header')\n\tif (!header) {\n\t\treturn\n\t}\n\theader.classList.add('hidden-by-call')\n\n\tconst sidebarCloseButton = document.querySelector('.app-sidebar__close')\n\tsidebarCloseButton?.setAttribute('data-theme-dark', 'true')\n\tsidebarCloseButton?.setAttribute('disabled', 'true')\n}\n\n/**\n * Restores visibility of the original sidebar header content.\n */\nfunction restoreSidebarHeaderContents() {\n\tconst header = document.querySelector('header.app-sidebar-header')\n\tif (!header) {\n\t\treturn\n\t}\n\theader.classList.remove('hidden-by-call')\n\n\tconst sidebarCloseButton = document.querySelector('.app-sidebar__close')\n\tsidebarCloseButton?.removeAttribute('data-theme-dark')\n\tsidebarCloseButton?.removeAttribute('disabled')\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_Teleport, { to: \"header.app-sidebar-header\" }, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(TopBar, {\n        \"is-in-call\": \"\",\n        \"is-sidebar\": \"\"\n      }),\n      _createVNode(CallView, {\n        token: _unref(token),\n        \"is-sidebar\": \"\"\n      }, null, 8, [\"token\"])\n    ])\n  ]))\n}\n}\n\n})","import script from \"./FilesSidebarCallView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FilesSidebarCallView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./FilesSidebarCallView.vue?vue&type=style&index=0&id=7d5d1e37&lang=scss\"\nimport \"./FilesSidebarCallView.vue?vue&type=style&index=1&id=7d5d1e37&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d5d1e37\"]])\n\nexport default __exports__"],"names":["useHashCheck","talkHashStore","reloadWarningShown","isNextcloudTalkHashDirty","newValue","showReloadWarning","_hoisted_1","__props","isLeavingAfterSessionIssue","useSessionIssueHandler","token","useGetToken","preventUnload","replaceSidebarHeaderContentsWithCallView","restoreSidebarHeaderContents","event","header","sidebarCloseButton","_ctx","_cache","TopBar","CallView"],"sourceRoot":""}