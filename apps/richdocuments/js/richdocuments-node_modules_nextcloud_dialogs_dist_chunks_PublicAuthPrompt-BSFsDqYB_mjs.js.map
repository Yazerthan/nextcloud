{"version":3,"file":"richdocuments-node_modules_nextcloud_dialogs_dist_chunks_PublicAuthPrompt-BSFsDqYB_mjs.js?v=7d340912ee050735de12","mappings":";yTAgDA,MAAAA,GAAAC,EAAAA,EAAAA,IAAA,UAAAC,QAEAC,GAAAC,EAAAA,EAAAA,IAAA,CACAC,KAAA,mBAEAC,WAAA,CACAC,SAAA,IACAC,WAAA,IACAC,YAAAA,EAAAA,GAGAC,MAAA,CAKAC,SAAA,CACAC,KAAAC,OACAC,QAAA,IAMAC,MAAA,CACAH,KAAAC,OACAC,SAAAE,EAAAA,EAAAA,GAAA,yBAQAC,KAAA,CACAL,KAAAC,OACAC,QAAA,IAOAI,OAAA,CACAN,KAAAC,OACAC,SAAAE,EAAAA,EAAAA,GAAA,sCAOAG,YAAA,CACAP,KAAAC,OACAC,SAAAE,EAAAA,EAAAA,GAAA,gBAOAI,YAAA,CACAR,KAAAS,QACAP,SAAA,IAIAQ,MAAAA,KACA,CACAN,EAAAA,EAAAA,IAIAO,MAAA,UAEAC,KAAAA,KACA,CACAnB,KAAA,KAIAoB,SAAA,CACAC,aAAAA,GACA,MAAAC,EAAA,CACAC,OAAAZ,EAAAA,EAAAA,GAAA,UACAa,QAAA,WACAC,SAAAA,IAAA,KAAAC,MAAA,UAGAC,EAAA,CACAJ,MAAA,KAAAT,YACAP,KAAA,SACAiB,QAAA,WAIA,YAAAT,YACA,CAAAO,EAAAK,GAGA,CAAAA,EAAA,GAIAC,MAAA,CAEAtB,SAAA,CACAuB,OAAAA,GACA,KAAA7B,KAAA,KAAAM,QACA,EACAwB,WAAA,GAGA9B,IAAAA,GAEA,MAAA+B,EAAA,KAAA/B,KAAAgC,UAAA,GACAC,EAAA,KAAAC,MAAAD,OAAAE,IAAAC,cAAA,SACA,IAAAH,EACA,OAGA,MAAAI,EC5JO,SAA8BrC,GAChC,GAAgB,KAAhBA,EAAKgC,OACR,OAAOrB,EAAAA,EAAAA,GAAE,4BAGN,GAAAX,EAAKsC,WAAW,KACnB,OAAO3B,EAAAA,EAAAA,GAAE,oCAGN,IAEI,OADP4B,EAAAA,EAAAA,IAAiBvC,GACV,SACCwC,GACJ,KAAEA,aAAiBC,EAAAA,IAChB,MAAAD,EAGP,OAAQA,EAAME,QACb,KAAKC,EAAAA,GAA2BC,UAC/B,OAAOjC,EAAAA,EAAAA,GAAE,yCAA0C,CAAEkC,KAAML,EAAMM,UAClE,KAAKH,EAAAA,GAA2BI,aAC/B,OAAOpC,EAAAA,EAAAA,GAAE,kDAAmD,CAAEmC,QAASN,EAAMM,UAC9E,KAAKH,EAAAA,GAA2BK,UAC/B,OAAIR,EAAMM,QAAQG,MAAM,aAChBtC,EAAAA,EAAAA,GAAE,wCAAyC,CAAEuC,UAAWV,EAAMM,WAE/DnC,EAAAA,EAAAA,GAAE,yCAA0C,CAAEuC,UAAWV,EAAMM,UACvE,QACC,OAAOnC,EAAAA,EAAAA,GAAE,iBACX,CAEF,CD6HAwC,CAAApB,GACAE,EAAAmB,kBAAAf,GACAJ,EAAAoB,gBAAA,GAIAC,QAAA,CACAC,QAAAA,GACA,MAAAtB,EAAA,KAAAC,MAAAD,MACA3B,EAAA,KAAAN,KAAAgC,OAEA,QAAA1B,EAKA,OAHA2B,EAAAmB,mBAAAzC,EAAAA,EAAAA,GAAA,qCACAsB,EAAAoB,sBACApB,EAAAuB,QAIA,GAAAlD,EAAAmD,OAAA,EAKA,OAHAxB,EAAAmB,mBAAAzC,EAAAA,EAAAA,GAAA,oDACAsB,EAAAoB,sBACApB,EAAAuB,QAIA,KAEAE,EAAAA,EAAAA,IAAApD,EAAA,OACAqD,GAIA,OAHAC,EAAAA,EAAAA,KAAAjD,EAAAA,EAAAA,GAAA,4BACAkD,QAAArB,MAAA,yBAAAmB,QACA1B,EAAAuB,OACA,CAIA7D,EAAAmE,QAAA,mCAGA,KAAApC,MAAA,aAAA1B,KAAA","sources":["webpack:///richdocuments/../../lib/components/PublicAuthPrompt.vue","webpack:///richdocuments/../../lib/utils/guestNameValidity.ts"],"sourcesContent":["<!--\n  - SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<NcDialog :buttons=\"dialogButtons\"\n\t\tclass=\"public-auth-prompt\"\n\t\tdata-cy-public-auth-prompt-dialog\n\t\tis-form\n\t\tno-close\n\t\t:name=\"title\"\n\t\t@submit=\"onSubmit\">\n\t\t<p v-if=\"text\" class=\"public-auth-prompt__text\">\n\t\t\t{{ text }}\n\t\t</p>\n\n\t\t<!-- Header -->\n\t\t<NcNoteCard class=\"public-auth-prompt__header\"\n\t\t\t:text=\"notice\"\n\t\t\ttype=\"info\" />\n\n\t\t<!-- Form -->\n\t\t<NcTextField ref=\"input\"\n\t\t\tclass=\"public-auth-prompt__input\"\n\t\t\tdata-cy-public-auth-prompt-dialog-name\n\t\t\t:label=\"t('Name')\"\n\t\t\t:placeholder=\"t('Enter your name')\"\n\t\t\t:required=\"!cancellable\"\n\t\t\tv-model=\"name\"\n\t\t\tminlength=\"2\"\n\t\t\tname=\"name\" />\n\t</NcDialog>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { getBuilder } from '@nextcloud/browser-storage'\nimport { setGuestNickname } from '@nextcloud/auth'\nimport { showError } from '@nextcloud/dialogs'\n\nimport NcDialog from '@nextcloud/vue/components/NcDialog'\nimport NcNoteCard from '@nextcloud/vue/components/NcNoteCard'\nimport NcTextField from '@nextcloud/vue/components/NcTextField'\n\nimport { t } from '../utils/l10n.ts'\nimport { getGuestNameValidity } from '../utils/guestNameValidity.ts'\n\nconst storage = getBuilder('public').build()\n\nexport default defineComponent({\n\tname: 'PublicAuthPrompt',\n\n\tcomponents: {\n\t\tNcDialog,\n\t\tNcNoteCard,\n\t\tNcTextField,\n\t},\n\n\tprops: {\n\t\t/**\n\t\t * Preselected nickname\n\t\t * @default '' No name preselected by default\n\t\t */\n\t\tnickname: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\n\t\t/**\n\t\t * Dialog title\n\t\t */\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\tdefault: t('Guest identification'),\n\t\t},\n\n\t\t/**\n\t\t * Dialog text under the dialog title\n\t\t * e.g 'Enter your name to access the file'\n\t\t * @default '' Not shown by default\n\t\t */\n\t\t text: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\n\t\t/**\n\t\t * Dialog notice\n\t\t * @default 'You are currently not identified.'\n\t\t */\n\t\tnotice: {\n\t\t\ttype: String,\n\t\t\tdefault: t('You are currently not identified.'),\n\t\t},\n\n\t\t/**\n\t\t * Dialog submit button label\n\t\t * @default 'Submit name'\n\t\t */\n\t\tsubmitLabel: {\n\t\t\ttype: String,\n\t\t\tdefault: t('Submit name'),\n\t\t},\n\n\t\t/**\n\t\t * Whether the dialog is cancellable\n\t\t * @default false\n\t\t */\n\t\tcancellable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\n\tsetup() {\n\t\treturn {\n\t\t\tt,\n\t\t}\n\t},\n\n\temits: ['close'],\n\n\tdata() {\n\t\treturn {\n\t\t\tname: '',\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tdialogButtons() {\n\t\t\tconst cancelButton = {\n\t\t\t\tlabel: t('Cancel'),\n\t\t\t\tvariant: 'tertiary',\n\t\t\t\tcallback: () => this.$emit('close'),\n\t\t\t}\n\n\t\t\tconst submitButton = {\n\t\t\t\tlabel: this.submitLabel,\n\t\t\t\ttype: 'submit',\n\t\t\t\tvariant: 'primary',\n\t\t\t}\n\n\t\t\t// If the dialog is cancellable, add a cancel button\n\t\t\tif (this.cancellable) {\n\t\t\t\treturn [cancelButton, submitButton]\n\t\t\t}\n\n\t\t\treturn [submitButton]\n\t\t},\n\t},\n\n\twatch: {\n\t\t/** Reset name to pre-selected nickname (e.g. Talk / Collabora ) */\n\t\tnickname: {\n\t\t\thandler() {\n\t\t\t\tthis.name = this.nickname\n\t\t\t},\n\t\t\timmediate: true,\n\t\t},\n\t\t\n\t\tname() {\n\t\t\t// Check validity of the new name\n\t\t\tconst newName = this.name.trim?.() || ''\n\t\t\tconst input = (this.$refs.input as Vue|undefined)?.$el.querySelector('input')\n\t\t\tif (!input) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst validity = getGuestNameValidity(newName)\n\t\t\tinput.setCustomValidity(validity)\n\t\t\tinput.reportValidity()\n\t\t},\n\t},\n\n\tmethods: {\n\t\tonSubmit() {\n\t\t\tconst input = this.$refs.input as HTMLInputElement\n\t\t\tconst nickname = this.name.trim()\n\n\t\t\tif (nickname === '') {\n\t\t\t\t// Show error if the nickname is empty\n\t\t\t\tinput.setCustomValidity(t('You cannot leave the name empty.'))\n\t\t\t\tinput.reportValidity()\n\t\t\t\tinput.focus()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (nickname.length < 2) {\n\t\t\t\t// Show error if the nickname is too short\n\t\t\t\tinput.setCustomValidity(t('Please enter a name with at least 2 characters.'))\n\t\t\t\tinput.reportValidity()\n\t\t\t\tinput.focus()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Set the nickname\n\t\t\t\tsetGuestNickname(nickname)\n\t\t\t} catch (e) {\n\t\t\t\tshowError(t('Failed to set nickname.'))\n\t\t\t\tconsole.error('Failed to set nickname', e)\n\t\t\t\tinput.focus()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Set the dialog as shown\n\t\t\tstorage.setItem('public-auth-prompt-shown', 'true')\n\n\t\t\t// Close the dialog\n\t\t\tthis.$emit('close', this.name)\n\t\t},\n\t},\n})\n</script>\n<style scoped lang=\"scss\">\n.public-auth-prompt {\n\t&__text {\n\t\t// Smaller than dialog title\n\t\tfont-size: 1.25em;\n\t\tmargin-block: 0 calc(3 * var(--default-grid-baseline));\n\t}\n\n\t&__header {\n\t\tmargin-block: 0 calc(3 * var(--default-grid-baseline));\n\t\t// No extra top margin for the first child\n\t\t&:first-child {\n\t\t\tmargin-top: 0;\n\t\t}\n\t}\n\n\t&__input {\n\t\tmargin-block: calc(4 * var(--default-grid-baseline)) calc(2 * var(--default-grid-baseline));\n\t}\n}\n</style>\n","/*!\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { InvalidFilenameError, InvalidFilenameErrorReason, validateFilename } from '@nextcloud/files'\nimport { t } from '../utils/l10n.ts'\n\n/**\n * Get the validity of a filename (empty if valid).\n * This can be used for `setCustomValidity` on input elements\n *\n * @param name The filename\n */\nexport function getGuestNameValidity(name: string): string {\n\tif (name.trim() === '') {\n\t\treturn t('Names must not be empty.')\n\t}\n\n\tif (name.startsWith('.')) {\n\t\treturn t('Names must not start with a dot.')\n\t}\n\n\ttry {\n\t\tvalidateFilename(name)\n\t\treturn ''\n\t} catch (error) {\n\t\tif (!(error instanceof InvalidFilenameError)) {\n\t\t\tthrow error\n\t\t}\n\n\t\tswitch (error.reason) {\n\t\t\tcase InvalidFilenameErrorReason.Character:\n\t\t\t\treturn t('\"{char}\" is not allowed inside a name.', { char: error.segment })\n\t\t\tcase InvalidFilenameErrorReason.ReservedName:\n\t\t\t\treturn t('\"{segment}\" is a reserved name and not allowed.', { segment: error.segment })\n\t\t\tcase InvalidFilenameErrorReason.Extension:\n\t\t\t\tif (error.segment.match(/\\.[a-z]/i)) {\n\t\t\t\t\treturn t('\"{extension}\" is not an allowed name.', { extension: error.segment })\n\t\t\t\t}\n\t\t\t\treturn t('Names must not end with \"{extension}\".', { extension: error.segment })\n\t\t\tdefault:\n\t\t\t\treturn t('Invalid name.')\n\t\t}\n\t}\n}\n"],"names":["storage","getBuilder","build","_sfc_main","defineComponent","name","components","NcDialog","NcNoteCard","NcTextField","props","nickname","type","String","default","title","t","text","notice","submitLabel","cancellable","Boolean","setup","emits","data","computed","dialogButtons","cancelButton","label","variant","callback","$emit","submitButton","watch","handler","immediate","newName","trim","input","$refs","$el","querySelector","validity","startsWith","validateFilename","error","InvalidFilenameError","reason","InvalidFilenameErrorReason","Character","char","segment","ReservedName","Extension","match","extension","getGuestNameValidity","setCustomValidity","reportValidity","methods","onSubmit","focus","length","setGuestNickname","e","showError","console","setItem"],"sourceRoot":""}